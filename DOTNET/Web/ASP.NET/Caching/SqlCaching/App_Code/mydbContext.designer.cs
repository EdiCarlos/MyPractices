#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="mydb")]
public partial class mydbContextDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Inserttb_tasklist(tb_tasklist instance);
  partial void Updatetb_tasklist(tb_tasklist instance);
  partial void Deletetb_tasklist(tb_tasklist instance);
  #endregion
	
	public mydbContextDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["mydbConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public mydbContextDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mydbContextDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mydbContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mydbContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<MyPriority> MyPriorities
	{
		get
		{
			return this.GetTable<MyPriority>();
		}
	}
	
	public System.Data.Linq.Table<tb_tasklist> tb_tasklists
	{
		get
		{
			return this.GetTable<tb_tasklist>();
		}
	}
}

[Table(Name="dbo.MyPriority")]
public partial class MyPriority
{
	
	private int _PID;
	
	private string _Priority;
	
	public MyPriority()
	{
	}
	
	[Column(Storage="_PID", DbType="Int NOT NULL")]
	public int PID
	{
		get
		{
			return this._PID;
		}
		set
		{
			if ((this._PID != value))
			{
				this._PID = value;
			}
		}
	}
	
	[Column(Storage="_Priority", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this._Priority = value;
			}
		}
	}
}

[Table(Name="dbo.tb_tasklist")]
public partial class tb_tasklist : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _taskid;
	
	private string _task;
	
	private System.Nullable<int> _tPriority;
	
	private System.DateTime _taskdate;
	
	private string _description;
	
	private int _status;
	
	private System.Nullable<System.DateTime> _date_completed;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntaskidChanging(int value);
    partial void OntaskidChanged();
    partial void OntaskChanging(string value);
    partial void OntaskChanged();
    partial void OntPriorityChanging(System.Nullable<int> value);
    partial void OntPriorityChanged();
    partial void OntaskdateChanging(System.DateTime value);
    partial void OntaskdateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Ondate_completedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_completedChanged();
    #endregion
	
	public tb_tasklist()
	{
		OnCreated();
	}
	
	[Column(Storage="_taskid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int taskid
	{
		get
		{
			return this._taskid;
		}
		set
		{
			if ((this._taskid != value))
			{
				this.OntaskidChanging(value);
				this.SendPropertyChanging();
				this._taskid = value;
				this.SendPropertyChanged("taskid");
				this.OntaskidChanged();
			}
		}
	}
	
	[Column(Storage="_task", DbType="NVarChar(100)")]
	public string task
	{
		get
		{
			return this._task;
		}
		set
		{
			if ((this._task != value))
			{
				this.OntaskChanging(value);
				this.SendPropertyChanging();
				this._task = value;
				this.SendPropertyChanged("task");
				this.OntaskChanged();
			}
		}
	}
	
	[Column(Storage="_tPriority", DbType="Int")]
	public System.Nullable<int> tPriority
	{
		get
		{
			return this._tPriority;
		}
		set
		{
			if ((this._tPriority != value))
			{
				this.OntPriorityChanging(value);
				this.SendPropertyChanging();
				this._tPriority = value;
				this.SendPropertyChanged("tPriority");
				this.OntPriorityChanged();
			}
		}
	}
	
	[Column(Storage="_taskdate", DbType="Date NOT NULL")]
	public System.DateTime taskdate
	{
		get
		{
			return this._taskdate;
		}
		set
		{
			if ((this._taskdate != value))
			{
				this.OntaskdateChanging(value);
				this.SendPropertyChanging();
				this._taskdate = value;
				this.SendPropertyChanged("taskdate");
				this.OntaskdateChanged();
			}
		}
	}
	
	[Column(Storage="_description", DbType="NVarChar(4000)")]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[Column(Storage="_status", DbType="Int NOT NULL")]
	public int status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[Column(Storage="_date_completed", DbType="DateTime")]
	public System.Nullable<System.DateTime> date_completed
	{
		get
		{
			return this._date_completed;
		}
		set
		{
			if ((this._date_completed != value))
			{
				this.Ondate_completedChanging(value);
				this.SendPropertyChanging();
				this._date_completed = value;
				this.SendPropertyChanged("date_completed");
				this.Ondate_completedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
