//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace TestManagerslib.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TestManagerDBContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TestManagerDBContainer object using the connection string found in the 'TestManagerDBContainer' section of the application configuration file.
        /// </summary>
        public TestManagerDBContainer() : base("name=TestManagerDBContainer", "TestManagerDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TestManagerDBContainer object.
        /// </summary>
        public TestManagerDBContainer(string connectionString) : base(connectionString, "TestManagerDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TestManagerDBContainer object.
        /// </summary>
        public TestManagerDBContainer(EntityConnection connection) : base(connection, "TestManagerDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestManager> TestManagers
        {
            get
            {
                if ((_TestManagers == null))
                {
                    _TestManagers = base.CreateObjectSet<TestManager>("TestManagers");
                }
                return _TestManagers;
            }
        }
        private ObjectSet<TestManager> _TestManagers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestManagers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestManagers(TestManager testManager)
        {
            base.AddObject("TestManagers", testManager);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="testName">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="numberOfQuestion">No Metadata Documentation available.</param>
        /// <param name="passPercentage">No Metadata Documentation available.</param>
        /// <param name="totalMarks">No Metadata Documentation available.</param>
        /// <param name="gradeId">No Metadata Documentation available.</param>
        /// <param name="testDuration">No Metadata Documentation available.</param>
        /// <param name="passMark">No Metadata Documentation available.</param>
        public int InsertTestManager(global::System.String testName, global::System.String description, Nullable<global::System.Int32> numberOfQuestion, Nullable<global::System.Decimal> passPercentage, Nullable<global::System.Int32> totalMarks, Nullable<global::System.Int32> gradeId, Nullable<global::System.Int32> testDuration, Nullable<global::System.Int32> passMark)
        {
            ObjectParameter testNameParameter;
            if (testName != null)
            {
                testNameParameter = new ObjectParameter("testName", testName);
            }
            else
            {
                testNameParameter = new ObjectParameter("testName", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("description", typeof(global::System.String));
            }
    
            ObjectParameter numberOfQuestionParameter;
            if (numberOfQuestion.HasValue)
            {
                numberOfQuestionParameter = new ObjectParameter("numberOfQuestion", numberOfQuestion);
            }
            else
            {
                numberOfQuestionParameter = new ObjectParameter("numberOfQuestion", typeof(global::System.Int32));
            }
    
            ObjectParameter passPercentageParameter;
            if (passPercentage.HasValue)
            {
                passPercentageParameter = new ObjectParameter("passPercentage", passPercentage);
            }
            else
            {
                passPercentageParameter = new ObjectParameter("passPercentage", typeof(global::System.Decimal));
            }
    
            ObjectParameter totalMarksParameter;
            if (totalMarks.HasValue)
            {
                totalMarksParameter = new ObjectParameter("totalMarks", totalMarks);
            }
            else
            {
                totalMarksParameter = new ObjectParameter("totalMarks", typeof(global::System.Int32));
            }
    
            ObjectParameter gradeIdParameter;
            if (gradeId.HasValue)
            {
                gradeIdParameter = new ObjectParameter("gradeId", gradeId);
            }
            else
            {
                gradeIdParameter = new ObjectParameter("gradeId", typeof(global::System.Int32));
            }
    
            ObjectParameter testDurationParameter;
            if (testDuration.HasValue)
            {
                testDurationParameter = new ObjectParameter("testDuration", testDuration);
            }
            else
            {
                testDurationParameter = new ObjectParameter("testDuration", typeof(global::System.Int32));
            }
    
            ObjectParameter passMarkParameter;
            if (passMark.HasValue)
            {
                passMarkParameter = new ObjectParameter("passMark", passMark);
            }
            else
            {
                passMarkParameter = new ObjectParameter("passMark", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertTestManager", testNameParameter, descriptionParameter, numberOfQuestionParameter, passPercentageParameter, totalMarksParameter, gradeIdParameter, testDurationParameter, passMarkParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TestManagerDB", Name="TestManager")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestManager : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestManager object.
        /// </summary>
        /// <param name="testManagerID">Initial value of the TestManagerID property.</param>
        /// <param name="testName">Initial value of the TestName property.</param>
        public static TestManager CreateTestManager(global::System.Int32 testManagerID, global::System.String testName)
        {
            TestManager testManager = new TestManager();
            testManager.TestManagerID = testManagerID;
            testManager.TestName = testName;
            return testManager;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestManagerID
        {
            get
            {
                return _TestManagerID;
            }
            set
            {
                if (_TestManagerID != value)
                {
                    OnTestManagerIDChanging(value);
                    ReportPropertyChanging("TestManagerID");
                    _TestManagerID = StructuralObject.SetValidValue(value, "TestManagerID");
                    ReportPropertyChanged("TestManagerID");
                    OnTestManagerIDChanged();
                }
            }
        }
        private global::System.Int32 _TestManagerID;
        partial void OnTestManagerIDChanging(global::System.Int32 value);
        partial void OnTestManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TestName
        {
            get
            {
                return _TestName;
            }
            set
            {
                OnTestNameChanging(value);
                ReportPropertyChanging("TestName");
                _TestName = StructuralObject.SetValidValue(value, false, "TestName");
                ReportPropertyChanged("TestName");
                OnTestNameChanged();
            }
        }
        private global::System.String _TestName;
        partial void OnTestNameChanging(global::System.String value);
        partial void OnTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestDescription
        {
            get
            {
                return _TestDescription;
            }
            set
            {
                OnTestDescriptionChanging(value);
                ReportPropertyChanging("TestDescription");
                _TestDescription = StructuralObject.SetValidValue(value, true, "TestDescription");
                ReportPropertyChanged("TestDescription");
                OnTestDescriptionChanged();
            }
        }
        private global::System.String _TestDescription;
        partial void OnTestDescriptionChanging(global::System.String value);
        partial void OnTestDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfQuestions
        {
            get
            {
                return _NumberOfQuestions;
            }
            set
            {
                OnNumberOfQuestionsChanging(value);
                ReportPropertyChanging("NumberOfQuestions");
                _NumberOfQuestions = StructuralObject.SetValidValue(value, "NumberOfQuestions");
                ReportPropertyChanged("NumberOfQuestions");
                OnNumberOfQuestionsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfQuestions;
        partial void OnNumberOfQuestionsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfQuestionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PassPercentage
        {
            get
            {
                return _PassPercentage;
            }
            set
            {
                OnPassPercentageChanging(value);
                ReportPropertyChanging("PassPercentage");
                _PassPercentage = StructuralObject.SetValidValue(value, "PassPercentage");
                ReportPropertyChanged("PassPercentage");
                OnPassPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _PassPercentage;
        partial void OnPassPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnPassPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalMarks
        {
            get
            {
                return _TotalMarks;
            }
            set
            {
                OnTotalMarksChanging(value);
                ReportPropertyChanging("TotalMarks");
                _TotalMarks = StructuralObject.SetValidValue(value, "TotalMarks");
                ReportPropertyChanged("TotalMarks");
                OnTotalMarksChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalMarks;
        partial void OnTotalMarksChanging(Nullable<global::System.Int32> value);
        partial void OnTotalMarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GradeTypeID
        {
            get
            {
                return _GradeTypeID;
            }
            set
            {
                OnGradeTypeIDChanging(value);
                ReportPropertyChanging("GradeTypeID");
                _GradeTypeID = StructuralObject.SetValidValue(value, "GradeTypeID");
                ReportPropertyChanged("GradeTypeID");
                OnGradeTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GradeTypeID;
        partial void OnGradeTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnGradeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestDuration
        {
            get
            {
                return _TestDuration;
            }
            set
            {
                OnTestDurationChanging(value);
                ReportPropertyChanging("TestDuration");
                _TestDuration = StructuralObject.SetValidValue(value, "TestDuration");
                ReportPropertyChanged("TestDuration");
                OnTestDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _TestDuration;
        partial void OnTestDurationChanging(Nullable<global::System.Int32> value);
        partial void OnTestDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PassingMark
        {
            get
            {
                return _PassingMark;
            }
            set
            {
                OnPassingMarkChanging(value);
                ReportPropertyChanging("PassingMark");
                _PassingMark = StructuralObject.SetValidValue(value, "PassingMark");
                ReportPropertyChanged("PassingMark");
                OnPassingMarkChanged();
            }
        }
        private Nullable<global::System.Int32> _PassingMark;
        partial void OnPassingMarkChanging(Nullable<global::System.Int32> value);
        partial void OnPassingMarkChanged();

        #endregion

    }

    #endregion

}
