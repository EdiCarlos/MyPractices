<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ Assembly Name="Microsoft.VisualStudio.QualityTools.UnitTestFramework.dll" #>

<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.VisualStudio.TestTools.UnitTesting" #>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.VisualStudio.TestTools.UnitTesting;


<#
   // insert your template code here the tempalte code will be syntaxhighlighted 
   // and you will have intellisense for all namespaces in the full edition
#>
// This is the output code from your template
// you only get syntax-highlighting here - not intellisense
namespace AutomateUnitTest.UnitTest{
  [TestClass]
  public class MyGeneratedClass{
<#
  foreach(string filename in Directory.GetFiles(@"D:\Documents and Settings\axkhan2\Desktop\APS\UnittestAutomation\XMLS"))
  {
#>
  <#       if(filename.EndsWith("Request.xml"))
          {
		   #>

			[TestMethod]
			public void <#= Path.GetFileNameWithoutExtension(filename) #>()
			{
			Program prog = new Program();
            int result = prog.Addition(10, 10);
            int actual = 20;
            Assert.AreEqual<int>(result, actual);
			}

	<# } #>
<#}#>
}
}
