//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SupremeTransport {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("zmaindataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class zmaindataset : global::System.Data.DataSet {
        
        private zbillDataTable tablezbill;
        
        private zmainbillDataTable tablezmainbill;
        
        private billRcvDataTable tablebillRcv;
        
        private billrcvPaymentDetDataTable tablebillrcvPaymentDet;
        
        private insertintopartpaymentDataTable tableinsertintopartpayment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public zmaindataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected zmaindataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["zbill"] != null)) {
                    base.Tables.Add(new zbillDataTable(ds.Tables["zbill"]));
                }
                if ((ds.Tables["zmainbill"] != null)) {
                    base.Tables.Add(new zmainbillDataTable(ds.Tables["zmainbill"]));
                }
                if ((ds.Tables["billRcv"] != null)) {
                    base.Tables.Add(new billRcvDataTable(ds.Tables["billRcv"]));
                }
                if ((ds.Tables["billrcvPaymentDet"] != null)) {
                    base.Tables.Add(new billrcvPaymentDetDataTable(ds.Tables["billrcvPaymentDet"]));
                }
                if ((ds.Tables["insertintopartpayment"] != null)) {
                    base.Tables.Add(new insertintopartpaymentDataTable(ds.Tables["insertintopartpayment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public zbillDataTable zbill {
            get {
                return this.tablezbill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public zmainbillDataTable zmainbill {
            get {
                return this.tablezmainbill;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public billRcvDataTable billRcv {
            get {
                return this.tablebillRcv;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public billrcvPaymentDetDataTable billrcvPaymentDet {
            get {
                return this.tablebillrcvPaymentDet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public insertintopartpaymentDataTable insertintopartpayment {
            get {
                return this.tableinsertintopartpayment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            zmaindataset cln = ((zmaindataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["zbill"] != null)) {
                    base.Tables.Add(new zbillDataTable(ds.Tables["zbill"]));
                }
                if ((ds.Tables["zmainbill"] != null)) {
                    base.Tables.Add(new zmainbillDataTable(ds.Tables["zmainbill"]));
                }
                if ((ds.Tables["billRcv"] != null)) {
                    base.Tables.Add(new billRcvDataTable(ds.Tables["billRcv"]));
                }
                if ((ds.Tables["billrcvPaymentDet"] != null)) {
                    base.Tables.Add(new billrcvPaymentDetDataTable(ds.Tables["billrcvPaymentDet"]));
                }
                if ((ds.Tables["insertintopartpayment"] != null)) {
                    base.Tables.Add(new insertintopartpaymentDataTable(ds.Tables["insertintopartpayment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablezbill = ((zbillDataTable)(base.Tables["zbill"]));
            if ((initTable == true)) {
                if ((this.tablezbill != null)) {
                    this.tablezbill.InitVars();
                }
            }
            this.tablezmainbill = ((zmainbillDataTable)(base.Tables["zmainbill"]));
            if ((initTable == true)) {
                if ((this.tablezmainbill != null)) {
                    this.tablezmainbill.InitVars();
                }
            }
            this.tablebillRcv = ((billRcvDataTable)(base.Tables["billRcv"]));
            if ((initTable == true)) {
                if ((this.tablebillRcv != null)) {
                    this.tablebillRcv.InitVars();
                }
            }
            this.tablebillrcvPaymentDet = ((billrcvPaymentDetDataTable)(base.Tables["billrcvPaymentDet"]));
            if ((initTable == true)) {
                if ((this.tablebillrcvPaymentDet != null)) {
                    this.tablebillrcvPaymentDet.InitVars();
                }
            }
            this.tableinsertintopartpayment = ((insertintopartpaymentDataTable)(base.Tables["insertintopartpayment"]));
            if ((initTable == true)) {
                if ((this.tableinsertintopartpayment != null)) {
                    this.tableinsertintopartpayment.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "zmaindataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/zmaindataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablezbill = new zbillDataTable();
            base.Tables.Add(this.tablezbill);
            this.tablezmainbill = new zmainbillDataTable();
            base.Tables.Add(this.tablezmainbill);
            this.tablebillRcv = new billRcvDataTable();
            base.Tables.Add(this.tablebillRcv);
            this.tablebillrcvPaymentDet = new billrcvPaymentDetDataTable();
            base.Tables.Add(this.tablebillrcvPaymentDet);
            this.tableinsertintopartpayment = new insertintopartpaymentDataTable();
            base.Tables.Add(this.tableinsertintopartpayment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializezbill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializezmainbill() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializebillRcv() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializebillrcvPaymentDet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinsertintopartpayment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            zmaindataset ds = new zmaindataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void zbillRowChangeEventHandler(object sender, zbillRowChangeEvent e);
        
        public delegate void zmainbillRowChangeEventHandler(object sender, zmainbillRowChangeEvent e);
        
        public delegate void billRcvRowChangeEventHandler(object sender, billRcvRowChangeEvent e);
        
        public delegate void billrcvPaymentDetRowChangeEventHandler(object sender, billrcvPaymentDetRowChangeEvent e);
        
        public delegate void insertintopartpaymentRowChangeEventHandler(object sender, insertintopartpaymentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class zbillDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnbillid;
            
            private global::System.Data.DataColumn columnmnbillid;
            
            private global::System.Data.DataColumn columnuserid;
            
            private global::System.Data.DataColumn columnbilldate;
            
            private global::System.Data.DataColumn columngcnumber;
            
            private global::System.Data.DataColumn columnchalanNumber;
            
            private global::System.Data.DataColumn columntruckNumber;
            
            private global::System.Data.DataColumn columngoods;
            
            private global::System.Data.DataColumn columnbags;
            
            private global::System.Data.DataColumn columntone;
            
            private global::System.Data.DataColumn columnrate;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnunloadingdate;
            
            private global::System.Data.DataColumn columnbillnumber;
            
            private global::System.Data.DataColumn columnexpense;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zbillDataTable() {
                this.TableName = "zbill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal zbillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected zbillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn billidColumn {
                get {
                    return this.columnbillid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mnbillidColumn {
                get {
                    return this.columnmnbillid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn useridColumn {
                get {
                    return this.columnuserid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn billdateColumn {
                get {
                    return this.columnbilldate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gcnumberColumn {
                get {
                    return this.columngcnumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chalanNumberColumn {
                get {
                    return this.columnchalanNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn truckNumberColumn {
                get {
                    return this.columntruckNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn goodsColumn {
                get {
                    return this.columngoods;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bagsColumn {
                get {
                    return this.columnbags;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn toneColumn {
                get {
                    return this.columntone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn rateColumn {
                get {
                    return this.columnrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unloadingdateColumn {
                get {
                    return this.columnunloadingdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn billnumberColumn {
                get {
                    return this.columnbillnumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expenseColumn {
                get {
                    return this.columnexpense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zbillRow this[int index] {
                get {
                    return ((zbillRow)(this.Rows[index]));
                }
            }
            
            public event zbillRowChangeEventHandler zbillRowChanging;
            
            public event zbillRowChangeEventHandler zbillRowChanged;
            
            public event zbillRowChangeEventHandler zbillRowDeleting;
            
            public event zbillRowChangeEventHandler zbillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddzbillRow(zbillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zbillRow AddzbillRow(int mnbillid, int userid, System.DateTime billdate, string gcnumber, string chalanNumber, string truckNumber, string goods, string bags, string tone, decimal rate, decimal amount, System.DateTime unloadingdate, string billnumber, decimal expense) {
                zbillRow rowzbillRow = ((zbillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        mnbillid,
                        userid,
                        billdate,
                        gcnumber,
                        chalanNumber,
                        truckNumber,
                        goods,
                        bags,
                        tone,
                        rate,
                        amount,
                        unloadingdate,
                        billnumber,
                        expense};
                rowzbillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowzbillRow);
                return rowzbillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                zbillDataTable cln = ((zbillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new zbillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnbillid = base.Columns["billid"];
                this.columnmnbillid = base.Columns["mnbillid"];
                this.columnuserid = base.Columns["userid"];
                this.columnbilldate = base.Columns["billdate"];
                this.columngcnumber = base.Columns["gcnumber"];
                this.columnchalanNumber = base.Columns["chalanNumber"];
                this.columntruckNumber = base.Columns["truckNumber"];
                this.columngoods = base.Columns["goods"];
                this.columnbags = base.Columns["bags"];
                this.columntone = base.Columns["tone"];
                this.columnrate = base.Columns["rate"];
                this.columnamount = base.Columns["amount"];
                this.columnunloadingdate = base.Columns["unloadingdate"];
                this.columnbillnumber = base.Columns["billnumber"];
                this.columnexpense = base.Columns["expense"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnbillid = new global::System.Data.DataColumn("billid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillid);
                this.columnmnbillid = new global::System.Data.DataColumn("mnbillid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmnbillid);
                this.columnuserid = new global::System.Data.DataColumn("userid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserid);
                this.columnbilldate = new global::System.Data.DataColumn("billdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbilldate);
                this.columngcnumber = new global::System.Data.DataColumn("gcnumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngcnumber);
                this.columnchalanNumber = new global::System.Data.DataColumn("chalanNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchalanNumber);
                this.columntruckNumber = new global::System.Data.DataColumn("truckNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntruckNumber);
                this.columngoods = new global::System.Data.DataColumn("goods", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngoods);
                this.columnbags = new global::System.Data.DataColumn("bags", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbags);
                this.columntone = new global::System.Data.DataColumn("tone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntone);
                this.columnrate = new global::System.Data.DataColumn("rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrate);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnunloadingdate = new global::System.Data.DataColumn("unloadingdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunloadingdate);
                this.columnbillnumber = new global::System.Data.DataColumn("billnumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillnumber);
                this.columnexpense = new global::System.Data.DataColumn("expense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpense);
                this.columnbillid.AutoIncrement = true;
                this.columnbillid.AllowDBNull = false;
                this.columnbillid.ReadOnly = true;
                this.columnbilldate.AllowDBNull = false;
                this.columngcnumber.AllowDBNull = false;
                this.columngcnumber.MaxLength = 30;
                this.columnchalanNumber.AllowDBNull = false;
                this.columnchalanNumber.MaxLength = 30;
                this.columntruckNumber.AllowDBNull = false;
                this.columntruckNumber.MaxLength = 30;
                this.columngoods.AllowDBNull = false;
                this.columngoods.MaxLength = 30;
                this.columnbags.AllowDBNull = false;
                this.columnbags.MaxLength = 30;
                this.columntone.AllowDBNull = false;
                this.columntone.MaxLength = 30;
                this.columnrate.AllowDBNull = false;
                this.columnamount.AllowDBNull = false;
                this.columnunloadingdate.AllowDBNull = false;
                this.columnbillnumber.AllowDBNull = false;
                this.columnbillnumber.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zbillRow NewzbillRow() {
                return ((zbillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new zbillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(zbillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.zbillRowChanged != null)) {
                    this.zbillRowChanged(this, new zbillRowChangeEvent(((zbillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.zbillRowChanging != null)) {
                    this.zbillRowChanging(this, new zbillRowChangeEvent(((zbillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.zbillRowDeleted != null)) {
                    this.zbillRowDeleted(this, new zbillRowChangeEvent(((zbillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.zbillRowDeleting != null)) {
                    this.zbillRowDeleting(this, new zbillRowChangeEvent(((zbillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovezbillRow(zbillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                zmaindataset ds = new zmaindataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "zbillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class zmainbillDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmnbillId;
            
            private global::System.Data.DataColumn columnuserid;
            
            private global::System.Data.DataColumn columnbillid;
            
            private global::System.Data.DataColumn columndebitBillNo;
            
            private global::System.Data.DataColumn columnbilldate;
            
            private global::System.Data.DataColumn columnpartyName;
            
            private global::System.Data.DataColumn columnstation;
            
            private global::System.Data.DataColumn columntotal;
            
            private global::System.Data.DataColumn columnserviceCharge;
            
            private global::System.Data.DataColumn columnsurcharge;
            
            private global::System.Data.DataColumn columnhsServiceCharge;
            
            private global::System.Data.DataColumn columntax;
            
            private global::System.Data.DataColumn columnchequeno;
            
            private global::System.Data.DataColumn columnbillrecieve;
            
            private global::System.Data.DataColumn columnbillrcvdate;
            
            private global::System.Data.DataColumn columnenddate;
            
            private global::System.Data.DataColumn columnCheque_Date;
            
            private global::System.Data.DataColumn columnTotalInWords;
            
            private global::System.Data.DataColumn columnTotalTones;
            
            private global::System.Data.DataColumn columnTotalBags;
            
            private global::System.Data.DataColumn columntds;
            
            private global::System.Data.DataColumn columnotherexpense;
            
            private global::System.Data.DataColumn columntotalrcvamount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zmainbillDataTable() {
                this.TableName = "zmainbill";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal zmainbillDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected zmainbillDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mnbillIdColumn {
                get {
                    return this.columnmnbillId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn useridColumn {
                get {
                    return this.columnuserid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn billidColumn {
                get {
                    return this.columnbillid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn debitBillNoColumn {
                get {
                    return this.columndebitBillNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn billdateColumn {
                get {
                    return this.columnbilldate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn partyNameColumn {
                get {
                    return this.columnpartyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stationColumn {
                get {
                    return this.columnstation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalColumn {
                get {
                    return this.columntotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn serviceChargeColumn {
                get {
                    return this.columnserviceCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn surchargeColumn {
                get {
                    return this.columnsurcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hsServiceChargeColumn {
                get {
                    return this.columnhsServiceCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn taxColumn {
                get {
                    return this.columntax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chequenoColumn {
                get {
                    return this.columnchequeno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn billrecieveColumn {
                get {
                    return this.columnbillrecieve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn billrcvdateColumn {
                get {
                    return this.columnbillrcvdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn enddateColumn {
                get {
                    return this.columnenddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalInWordsColumn {
                get {
                    return this.columnTotalInWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalTonesColumn {
                get {
                    return this.columnTotalTones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalBagsColumn {
                get {
                    return this.columnTotalBags;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tdsColumn {
                get {
                    return this.columntds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherexpenseColumn {
                get {
                    return this.columnotherexpense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalrcvamountColumn {
                get {
                    return this.columntotalrcvamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zmainbillRow this[int index] {
                get {
                    return ((zmainbillRow)(this.Rows[index]));
                }
            }
            
            public event zmainbillRowChangeEventHandler zmainbillRowChanging;
            
            public event zmainbillRowChangeEventHandler zmainbillRowChanged;
            
            public event zmainbillRowChangeEventHandler zmainbillRowDeleting;
            
            public event zmainbillRowChangeEventHandler zmainbillRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddzmainbillRow(zmainbillRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zmainbillRow AddzmainbillRow(
                        int userid, 
                        int billid, 
                        int debitBillNo, 
                        System.DateTime billdate, 
                        string partyName, 
                        string station, 
                        decimal total, 
                        decimal serviceCharge, 
                        decimal surcharge, 
                        decimal hsServiceCharge, 
                        decimal tax, 
                        string chequeno, 
                        bool billrecieve, 
                        System.DateTime billrcvdate, 
                        System.DateTime enddate, 
                        System.DateTime Cheque_Date, 
                        string TotalInWords, 
                        string TotalTones, 
                        string TotalBags, 
                        decimal tds, 
                        decimal otherexpense, 
                        decimal totalrcvamount) {
                zmainbillRow rowzmainbillRow = ((zmainbillRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        userid,
                        billid,
                        debitBillNo,
                        billdate,
                        partyName,
                        station,
                        total,
                        serviceCharge,
                        surcharge,
                        hsServiceCharge,
                        tax,
                        chequeno,
                        billrecieve,
                        billrcvdate,
                        enddate,
                        Cheque_Date,
                        TotalInWords,
                        TotalTones,
                        TotalBags,
                        tds,
                        otherexpense,
                        totalrcvamount};
                rowzmainbillRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowzmainbillRow);
                return rowzmainbillRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                zmainbillDataTable cln = ((zmainbillDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new zmainbillDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmnbillId = base.Columns["mnbillId"];
                this.columnuserid = base.Columns["userid"];
                this.columnbillid = base.Columns["billid"];
                this.columndebitBillNo = base.Columns["debitBillNo"];
                this.columnbilldate = base.Columns["billdate"];
                this.columnpartyName = base.Columns["partyName"];
                this.columnstation = base.Columns["station"];
                this.columntotal = base.Columns["total"];
                this.columnserviceCharge = base.Columns["serviceCharge"];
                this.columnsurcharge = base.Columns["surcharge"];
                this.columnhsServiceCharge = base.Columns["hsServiceCharge"];
                this.columntax = base.Columns["tax"];
                this.columnchequeno = base.Columns["chequeno"];
                this.columnbillrecieve = base.Columns["billrecieve"];
                this.columnbillrcvdate = base.Columns["billrcvdate"];
                this.columnenddate = base.Columns["enddate"];
                this.columnCheque_Date = base.Columns["Cheque_Date"];
                this.columnTotalInWords = base.Columns["TotalInWords"];
                this.columnTotalTones = base.Columns["TotalTones"];
                this.columnTotalBags = base.Columns["TotalBags"];
                this.columntds = base.Columns["tds"];
                this.columnotherexpense = base.Columns["otherexpense"];
                this.columntotalrcvamount = base.Columns["totalrcvamount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmnbillId = new global::System.Data.DataColumn("mnbillId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmnbillId);
                this.columnuserid = new global::System.Data.DataColumn("userid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserid);
                this.columnbillid = new global::System.Data.DataColumn("billid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillid);
                this.columndebitBillNo = new global::System.Data.DataColumn("debitBillNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndebitBillNo);
                this.columnbilldate = new global::System.Data.DataColumn("billdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbilldate);
                this.columnpartyName = new global::System.Data.DataColumn("partyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpartyName);
                this.columnstation = new global::System.Data.DataColumn("station", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstation);
                this.columntotal = new global::System.Data.DataColumn("total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal);
                this.columnserviceCharge = new global::System.Data.DataColumn("serviceCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserviceCharge);
                this.columnsurcharge = new global::System.Data.DataColumn("surcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurcharge);
                this.columnhsServiceCharge = new global::System.Data.DataColumn("hsServiceCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhsServiceCharge);
                this.columntax = new global::System.Data.DataColumn("tax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax);
                this.columnchequeno = new global::System.Data.DataColumn("chequeno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchequeno);
                this.columnbillrecieve = new global::System.Data.DataColumn("billrecieve", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillrecieve);
                this.columnbillrcvdate = new global::System.Data.DataColumn("billrcvdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillrcvdate);
                this.columnenddate = new global::System.Data.DataColumn("enddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenddate);
                this.columnCheque_Date = new global::System.Data.DataColumn("Cheque_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Date);
                this.columnTotalInWords = new global::System.Data.DataColumn("TotalInWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalInWords);
                this.columnTotalTones = new global::System.Data.DataColumn("TotalTones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTones);
                this.columnTotalBags = new global::System.Data.DataColumn("TotalBags", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBags);
                this.columntds = new global::System.Data.DataColumn("tds", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntds);
                this.columnotherexpense = new global::System.Data.DataColumn("otherexpense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherexpense);
                this.columntotalrcvamount = new global::System.Data.DataColumn("totalrcvamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalrcvamount);
                this.columnmnbillId.AutoIncrement = true;
                this.columnmnbillId.AllowDBNull = false;
                this.columnmnbillId.ReadOnly = true;
                this.columndebitBillNo.AllowDBNull = false;
                this.columnbilldate.AllowDBNull = false;
                this.columnpartyName.AllowDBNull = false;
                this.columnpartyName.MaxLength = 50;
                this.columnstation.MaxLength = 30;
                this.columntotal.AllowDBNull = false;
                this.columnchequeno.MaxLength = 30;
                this.columnTotalInWords.MaxLength = 60;
                this.columnTotalTones.MaxLength = 30;
                this.columnTotalBags.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zmainbillRow NewzmainbillRow() {
                return ((zmainbillRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new zmainbillRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(zmainbillRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.zmainbillRowChanged != null)) {
                    this.zmainbillRowChanged(this, new zmainbillRowChangeEvent(((zmainbillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.zmainbillRowChanging != null)) {
                    this.zmainbillRowChanging(this, new zmainbillRowChangeEvent(((zmainbillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.zmainbillRowDeleted != null)) {
                    this.zmainbillRowDeleted(this, new zmainbillRowChangeEvent(((zmainbillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.zmainbillRowDeleting != null)) {
                    this.zmainbillRowDeleting(this, new zmainbillRowChangeEvent(((zmainbillRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovezmainbillRow(zmainbillRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                zmaindataset ds = new zmaindataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "zmainbillDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class billRcvDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBill_ID;
            
            private global::System.Data.DataColumn columnUser_Id;
            
            private global::System.Data.DataColumn columnDebit_Bill_No;
            
            private global::System.Data.DataColumn columnBill_Date;
            
            private global::System.Data.DataColumn columnParty_Name;
            
            private global::System.Data.DataColumn columnStation;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnService_Charge;
            
            private global::System.Data.DataColumn columnH_S_Service_Charge;
            
            private global::System.Data.DataColumn columnTax;
            
            private global::System.Data.DataColumn columnCheque_Number;
            
            private global::System.Data.DataColumn columnBill_Received;
            
            private global::System.Data.DataColumn columnBill_Received_Date;
            
            private global::System.Data.DataColumn columnStart_Date;
            
            private global::System.Data.DataColumn columnEnd_Date;
            
            private global::System.Data.DataColumn columnCheque_Date;
            
            private global::System.Data.DataColumn columnTotal_TDS;
            
            private global::System.Data.DataColumn columnOther_Expense;
            
            private global::System.Data.DataColumn columnTotal_Received_Amount;
            
            private global::System.Data.DataColumn columnBalance_Amount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billRcvDataTable() {
                this.TableName = "billRcv";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal billRcvDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected billRcvDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_IDColumn {
                get {
                    return this.columnBill_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_IdColumn {
                get {
                    return this.columnUser_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Debit_Bill_NoColumn {
                get {
                    return this.columnDebit_Bill_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn {
                get {
                    return this.columnBill_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Party_NameColumn {
                get {
                    return this.columnParty_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationColumn {
                get {
                    return this.columnStation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Service_ChargeColumn {
                get {
                    return this.columnService_Charge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn H_S_Service_ChargeColumn {
                get {
                    return this.columnH_S_Service_Charge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_NumberColumn {
                get {
                    return this.columnCheque_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_ReceivedColumn {
                get {
                    return this.columnBill_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_Received_DateColumn {
                get {
                    return this.columnBill_Received_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Start_DateColumn {
                get {
                    return this.columnStart_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn End_DateColumn {
                get {
                    return this.columnEnd_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_TDSColumn {
                get {
                    return this.columnTotal_TDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Other_ExpenseColumn {
                get {
                    return this.columnOther_Expense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_Received_AmountColumn {
                get {
                    return this.columnTotal_Received_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Balance_AmountColumn {
                get {
                    return this.columnBalance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billRcvRow this[int index] {
                get {
                    return ((billRcvRow)(this.Rows[index]));
                }
            }
            
            public event billRcvRowChangeEventHandler billRcvRowChanging;
            
            public event billRcvRowChangeEventHandler billRcvRowChanged;
            
            public event billRcvRowChangeEventHandler billRcvRowDeleting;
            
            public event billRcvRowChangeEventHandler billRcvRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddbillRcvRow(billRcvRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billRcvRow AddbillRcvRow(
                        int User_Id, 
                        int Debit_Bill_No, 
                        System.DateTime Bill_Date, 
                        string Party_Name, 
                        string Station, 
                        decimal Total, 
                        decimal Service_Charge, 
                        decimal H_S_Service_Charge, 
                        decimal Tax, 
                        string Cheque_Number, 
                        bool Bill_Received, 
                        System.DateTime Bill_Received_Date, 
                        System.DateTime Start_Date, 
                        System.DateTime End_Date, 
                        System.DateTime Cheque_Date, 
                        decimal Total_TDS, 
                        decimal Other_Expense, 
                        decimal Total_Received_Amount, 
                        decimal Balance_Amount) {
                billRcvRow rowbillRcvRow = ((billRcvRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        User_Id,
                        Debit_Bill_No,
                        Bill_Date,
                        Party_Name,
                        Station,
                        Total,
                        Service_Charge,
                        H_S_Service_Charge,
                        Tax,
                        Cheque_Number,
                        Bill_Received,
                        Bill_Received_Date,
                        Start_Date,
                        End_Date,
                        Cheque_Date,
                        Total_TDS,
                        Other_Expense,
                        Total_Received_Amount,
                        Balance_Amount};
                rowbillRcvRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbillRcvRow);
                return rowbillRcvRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                billRcvDataTable cln = ((billRcvDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new billRcvDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBill_ID = base.Columns["Bill ID"];
                this.columnUser_Id = base.Columns["User Id"];
                this.columnDebit_Bill_No = base.Columns["Debit Bill No"];
                this.columnBill_Date = base.Columns["Bill Date"];
                this.columnParty_Name = base.Columns["Party Name"];
                this.columnStation = base.Columns["Station"];
                this.columnTotal = base.Columns["Total"];
                this.columnService_Charge = base.Columns["Service Charge"];
                this.columnH_S_Service_Charge = base.Columns["H_S_Service Charge"];
                this.columnTax = base.Columns["Tax"];
                this.columnCheque_Number = base.Columns["Cheque Number"];
                this.columnBill_Received = base.Columns["Bill Received"];
                this.columnBill_Received_Date = base.Columns["Bill Received Date"];
                this.columnStart_Date = base.Columns["Start Date"];
                this.columnEnd_Date = base.Columns["End Date"];
                this.columnCheque_Date = base.Columns["Cheque Date"];
                this.columnTotal_TDS = base.Columns["Total TDS"];
                this.columnOther_Expense = base.Columns["Other Expense"];
                this.columnTotal_Received_Amount = base.Columns["Total Received Amount"];
                this.columnBalance_Amount = base.Columns["Balance Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBill_ID = new global::System.Data.DataColumn("Bill ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_ID);
                this.columnUser_Id = new global::System.Data.DataColumn("User Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Id);
                this.columnDebit_Bill_No = new global::System.Data.DataColumn("Debit Bill No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebit_Bill_No);
                this.columnBill_Date = new global::System.Data.DataColumn("Bill Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnParty_Name = new global::System.Data.DataColumn("Party Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParty_Name);
                this.columnStation = new global::System.Data.DataColumn("Station", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStation);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnService_Charge = new global::System.Data.DataColumn("Service Charge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnService_Charge);
                this.columnH_S_Service_Charge = new global::System.Data.DataColumn("H_S_Service Charge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH_S_Service_Charge);
                this.columnTax = new global::System.Data.DataColumn("Tax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnCheque_Number = new global::System.Data.DataColumn("Cheque Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Number);
                this.columnBill_Received = new global::System.Data.DataColumn("Bill Received", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Received);
                this.columnBill_Received_Date = new global::System.Data.DataColumn("Bill Received Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Received_Date);
                this.columnStart_Date = new global::System.Data.DataColumn("Start Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStart_Date);
                this.columnEnd_Date = new global::System.Data.DataColumn("End Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnd_Date);
                this.columnCheque_Date = new global::System.Data.DataColumn("Cheque Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.columnCheque_Date.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Cheque_Date");
                this.columnCheque_Date.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Cheque_DateColumn");
                this.columnCheque_Date.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnCheque_Date");
                this.columnCheque_Date.ExtendedProperties.Add("Generator_UserColumnName", "Cheque Date");
                base.Columns.Add(this.columnCheque_Date);
                this.columnTotal_TDS = new global::System.Data.DataColumn("Total TDS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_TDS);
                this.columnOther_Expense = new global::System.Data.DataColumn("Other Expense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther_Expense);
                this.columnTotal_Received_Amount = new global::System.Data.DataColumn("Total Received Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Received_Amount);
                this.columnBalance_Amount = new global::System.Data.DataColumn("Balance Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance_Amount);
                this.columnBill_ID.AutoIncrement = true;
                this.columnBill_ID.AllowDBNull = false;
                this.columnBill_ID.ReadOnly = true;
                this.columnDebit_Bill_No.AllowDBNull = false;
                this.columnBill_Date.AllowDBNull = false;
                this.columnParty_Name.AllowDBNull = false;
                this.columnParty_Name.MaxLength = 50;
                this.columnStation.MaxLength = 30;
                this.columnTotal.AllowDBNull = false;
                this.columnH_S_Service_Charge.Caption = "H.S.Service Charge";
                this.columnCheque_Number.MaxLength = 30;
                this.columnStart_Date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billRcvRow NewbillRcvRow() {
                return ((billRcvRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new billRcvRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(billRcvRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.billRcvRowChanged != null)) {
                    this.billRcvRowChanged(this, new billRcvRowChangeEvent(((billRcvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.billRcvRowChanging != null)) {
                    this.billRcvRowChanging(this, new billRcvRowChangeEvent(((billRcvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.billRcvRowDeleted != null)) {
                    this.billRcvRowDeleted(this, new billRcvRowChangeEvent(((billRcvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.billRcvRowDeleting != null)) {
                    this.billRcvRowDeleting(this, new billRcvRowChangeEvent(((billRcvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovebillRcvRow(billRcvRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                zmaindataset ds = new zmaindataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "billRcvDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class billrcvPaymentDetDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPayment_Id;
            
            private global::System.Data.DataColumn columnBill_Id;
            
            private global::System.Data.DataColumn columnChequeNumber;
            
            private global::System.Data.DataColumn columnCheque_Date;
            
            private global::System.Data.DataColumn columnCheque_Amount;
            
            private global::System.Data.DataColumn columnTDS;
            
            private global::System.Data.DataColumn columnOther_Expense;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billrcvPaymentDetDataTable() {
                this.TableName = "billrcvPaymentDet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal billrcvPaymentDetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected billrcvPaymentDetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Payment_IdColumn {
                get {
                    return this.columnPayment_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_IdColumn {
                get {
                    return this.columnBill_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeNumberColumn {
                get {
                    return this.columnChequeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_DateColumn {
                get {
                    return this.columnCheque_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_AmountColumn {
                get {
                    return this.columnCheque_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TDSColumn {
                get {
                    return this.columnTDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Other_ExpenseColumn {
                get {
                    return this.columnOther_Expense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billrcvPaymentDetRow this[int index] {
                get {
                    return ((billrcvPaymentDetRow)(this.Rows[index]));
                }
            }
            
            public event billrcvPaymentDetRowChangeEventHandler billrcvPaymentDetRowChanging;
            
            public event billrcvPaymentDetRowChangeEventHandler billrcvPaymentDetRowChanged;
            
            public event billrcvPaymentDetRowChangeEventHandler billrcvPaymentDetRowDeleting;
            
            public event billrcvPaymentDetRowChangeEventHandler billrcvPaymentDetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddbillrcvPaymentDetRow(billrcvPaymentDetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billrcvPaymentDetRow AddbillrcvPaymentDetRow(int Bill_Id, string ChequeNumber, System.DateTime Cheque_Date, decimal Cheque_Amount, decimal TDS, decimal Other_Expense, decimal Total) {
                billrcvPaymentDetRow rowbillrcvPaymentDetRow = ((billrcvPaymentDetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Bill_Id,
                        ChequeNumber,
                        Cheque_Date,
                        Cheque_Amount,
                        TDS,
                        Other_Expense,
                        Total};
                rowbillrcvPaymentDetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowbillrcvPaymentDetRow);
                return rowbillrcvPaymentDetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                billrcvPaymentDetDataTable cln = ((billrcvPaymentDetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new billrcvPaymentDetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPayment_Id = base.Columns["Payment Id"];
                this.columnBill_Id = base.Columns["Bill Id"];
                this.columnChequeNumber = base.Columns["ChequeNumber"];
                this.columnCheque_Date = base.Columns["Cheque Date"];
                this.columnCheque_Amount = base.Columns["Cheque Amount"];
                this.columnTDS = base.Columns["TDS"];
                this.columnOther_Expense = base.Columns["Other Expense"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPayment_Id = new global::System.Data.DataColumn("Payment Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Id);
                this.columnBill_Id = new global::System.Data.DataColumn("Bill Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Id);
                this.columnChequeNumber = new global::System.Data.DataColumn("ChequeNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeNumber);
                this.columnCheque_Date = new global::System.Data.DataColumn("Cheque Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                this.columnCheque_Date.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Cheque_Date");
                this.columnCheque_Date.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Cheque_DateColumn");
                this.columnCheque_Date.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnCheque_Date");
                this.columnCheque_Date.ExtendedProperties.Add("Generator_UserColumnName", "Cheque Date");
                base.Columns.Add(this.columnCheque_Date);
                this.columnCheque_Amount = new global::System.Data.DataColumn("Cheque Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Amount);
                this.columnTDS = new global::System.Data.DataColumn("TDS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDS);
                this.columnOther_Expense = new global::System.Data.DataColumn("Other Expense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther_Expense);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnPayment_Id.AutoIncrement = true;
                this.columnPayment_Id.AllowDBNull = false;
                this.columnPayment_Id.ReadOnly = true;
                this.columnChequeNumber.MaxLength = 30;
                this.columnCheque_Amount.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billrcvPaymentDetRow NewbillrcvPaymentDetRow() {
                return ((billrcvPaymentDetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new billrcvPaymentDetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(billrcvPaymentDetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.billrcvPaymentDetRowChanged != null)) {
                    this.billrcvPaymentDetRowChanged(this, new billrcvPaymentDetRowChangeEvent(((billrcvPaymentDetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.billrcvPaymentDetRowChanging != null)) {
                    this.billrcvPaymentDetRowChanging(this, new billrcvPaymentDetRowChangeEvent(((billrcvPaymentDetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.billrcvPaymentDetRowDeleted != null)) {
                    this.billrcvPaymentDetRowDeleted(this, new billrcvPaymentDetRowChangeEvent(((billrcvPaymentDetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.billrcvPaymentDetRowDeleting != null)) {
                    this.billrcvPaymentDetRowDeleting(this, new billrcvPaymentDetRowChangeEvent(((billrcvPaymentDetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovebillrcvPaymentDetRow(billrcvPaymentDetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                zmaindataset ds = new zmaindataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "billrcvPaymentDetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class insertintopartpaymentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnpaymentid;
            
            private global::System.Data.DataColumn columnmnbillid;
            
            private global::System.Data.DataColumn columnchequeno;
            
            private global::System.Data.DataColumn columnchequedate;
            
            private global::System.Data.DataColumn columnchequeamount;
            
            private global::System.Data.DataColumn columntds;
            
            private global::System.Data.DataColumn columnotherexpense;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnpaymentdate;
            
            private global::System.Data.DataColumn columnupdatedate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public insertintopartpaymentDataTable() {
                this.TableName = "insertintopartpayment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal insertintopartpaymentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected insertintopartpaymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paymentidColumn {
                get {
                    return this.columnpaymentid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mnbillidColumn {
                get {
                    return this.columnmnbillid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chequenoColumn {
                get {
                    return this.columnchequeno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chequedateColumn {
                get {
                    return this.columnchequedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chequeamountColumn {
                get {
                    return this.columnchequeamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tdsColumn {
                get {
                    return this.columntds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherexpenseColumn {
                get {
                    return this.columnotherexpense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paymentdateColumn {
                get {
                    return this.columnpaymentdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updatedateColumn {
                get {
                    return this.columnupdatedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public insertintopartpaymentRow this[int index] {
                get {
                    return ((insertintopartpaymentRow)(this.Rows[index]));
                }
            }
            
            public event insertintopartpaymentRowChangeEventHandler insertintopartpaymentRowChanging;
            
            public event insertintopartpaymentRowChangeEventHandler insertintopartpaymentRowChanged;
            
            public event insertintopartpaymentRowChangeEventHandler insertintopartpaymentRowDeleting;
            
            public event insertintopartpaymentRowChangeEventHandler insertintopartpaymentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinsertintopartpaymentRow(insertintopartpaymentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public insertintopartpaymentRow AddinsertintopartpaymentRow(int mnbillid, string chequeno, System.DateTime chequedate, decimal chequeamount, decimal tds, decimal otherexpense, decimal Total, System.DateTime paymentdate, System.DateTime updatedate) {
                insertintopartpaymentRow rowinsertintopartpaymentRow = ((insertintopartpaymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        mnbillid,
                        chequeno,
                        chequedate,
                        chequeamount,
                        tds,
                        otherexpense,
                        Total,
                        paymentdate,
                        updatedate};
                rowinsertintopartpaymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinsertintopartpaymentRow);
                return rowinsertintopartpaymentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                insertintopartpaymentDataTable cln = ((insertintopartpaymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new insertintopartpaymentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpaymentid = base.Columns["paymentid"];
                this.columnmnbillid = base.Columns["mnbillid"];
                this.columnchequeno = base.Columns["chequeno"];
                this.columnchequedate = base.Columns["chequedate"];
                this.columnchequeamount = base.Columns["chequeamount"];
                this.columntds = base.Columns["tds"];
                this.columnotherexpense = base.Columns["otherexpense"];
                this.columnTotal = base.Columns["Total"];
                this.columnpaymentdate = base.Columns["paymentdate"];
                this.columnupdatedate = base.Columns["updatedate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpaymentid = new global::System.Data.DataColumn("paymentid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentid);
                this.columnmnbillid = new global::System.Data.DataColumn("mnbillid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmnbillid);
                this.columnchequeno = new global::System.Data.DataColumn("chequeno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchequeno);
                this.columnchequedate = new global::System.Data.DataColumn("chequedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchequedate);
                this.columnchequeamount = new global::System.Data.DataColumn("chequeamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchequeamount);
                this.columntds = new global::System.Data.DataColumn("tds", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntds);
                this.columnotherexpense = new global::System.Data.DataColumn("otherexpense", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherexpense);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnpaymentdate = new global::System.Data.DataColumn("paymentdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentdate);
                this.columnupdatedate = new global::System.Data.DataColumn("updatedate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdatedate);
                this.columnpaymentid.AutoIncrement = true;
                this.columnpaymentid.AllowDBNull = false;
                this.columnpaymentid.ReadOnly = true;
                this.columnchequeno.MaxLength = 30;
                this.columnchequeamount.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public insertintopartpaymentRow NewinsertintopartpaymentRow() {
                return ((insertintopartpaymentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new insertintopartpaymentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(insertintopartpaymentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.insertintopartpaymentRowChanged != null)) {
                    this.insertintopartpaymentRowChanged(this, new insertintopartpaymentRowChangeEvent(((insertintopartpaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.insertintopartpaymentRowChanging != null)) {
                    this.insertintopartpaymentRowChanging(this, new insertintopartpaymentRowChangeEvent(((insertintopartpaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.insertintopartpaymentRowDeleted != null)) {
                    this.insertintopartpaymentRowDeleted(this, new insertintopartpaymentRowChangeEvent(((insertintopartpaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.insertintopartpaymentRowDeleting != null)) {
                    this.insertintopartpaymentRowDeleting(this, new insertintopartpaymentRowChangeEvent(((insertintopartpaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinsertintopartpaymentRow(insertintopartpaymentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                zmaindataset ds = new zmaindataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "insertintopartpaymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class zbillRow : global::System.Data.DataRow {
            
            private zbillDataTable tablezbill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal zbillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablezbill = ((zbillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int billid {
                get {
                    return ((int)(this[this.tablezbill.billidColumn]));
                }
                set {
                    this[this.tablezbill.billidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int mnbillid {
                get {
                    try {
                        return ((int)(this[this.tablezbill.mnbillidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mnbillid\' in table \'zbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezbill.mnbillidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userid {
                get {
                    try {
                        return ((int)(this[this.tablezbill.useridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userid\' in table \'zbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezbill.useridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime billdate {
                get {
                    return ((global::System.DateTime)(this[this.tablezbill.billdateColumn]));
                }
                set {
                    this[this.tablezbill.billdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gcnumber {
                get {
                    return ((string)(this[this.tablezbill.gcnumberColumn]));
                }
                set {
                    this[this.tablezbill.gcnumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chalanNumber {
                get {
                    return ((string)(this[this.tablezbill.chalanNumberColumn]));
                }
                set {
                    this[this.tablezbill.chalanNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string truckNumber {
                get {
                    return ((string)(this[this.tablezbill.truckNumberColumn]));
                }
                set {
                    this[this.tablezbill.truckNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string goods {
                get {
                    return ((string)(this[this.tablezbill.goodsColumn]));
                }
                set {
                    this[this.tablezbill.goodsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bags {
                get {
                    return ((string)(this[this.tablezbill.bagsColumn]));
                }
                set {
                    this[this.tablezbill.bagsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tone {
                get {
                    return ((string)(this[this.tablezbill.toneColumn]));
                }
                set {
                    this[this.tablezbill.toneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal rate {
                get {
                    return ((decimal)(this[this.tablezbill.rateColumn]));
                }
                set {
                    this[this.tablezbill.rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal amount {
                get {
                    return ((decimal)(this[this.tablezbill.amountColumn]));
                }
                set {
                    this[this.tablezbill.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime unloadingdate {
                get {
                    return ((global::System.DateTime)(this[this.tablezbill.unloadingdateColumn]));
                }
                set {
                    this[this.tablezbill.unloadingdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string billnumber {
                get {
                    return ((string)(this[this.tablezbill.billnumberColumn]));
                }
                set {
                    this[this.tablezbill.billnumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal expense {
                get {
                    try {
                        return ((decimal)(this[this.tablezbill.expenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'expense\' in table \'zbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezbill.expenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmnbillidNull() {
                return this.IsNull(this.tablezbill.mnbillidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmnbillidNull() {
                this[this.tablezbill.mnbillidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuseridNull() {
                return this.IsNull(this.tablezbill.useridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuseridNull() {
                this[this.tablezbill.useridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpenseNull() {
                return this.IsNull(this.tablezbill.expenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpenseNull() {
                this[this.tablezbill.expenseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class zmainbillRow : global::System.Data.DataRow {
            
            private zmainbillDataTable tablezmainbill;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal zmainbillRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablezmainbill = ((zmainbillDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int mnbillId {
                get {
                    return ((int)(this[this.tablezmainbill.mnbillIdColumn]));
                }
                set {
                    this[this.tablezmainbill.mnbillIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userid {
                get {
                    try {
                        return ((int)(this[this.tablezmainbill.useridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userid\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.useridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int billid {
                get {
                    try {
                        return ((int)(this[this.tablezmainbill.billidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billid\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.billidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int debitBillNo {
                get {
                    return ((int)(this[this.tablezmainbill.debitBillNoColumn]));
                }
                set {
                    this[this.tablezmainbill.debitBillNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime billdate {
                get {
                    return ((global::System.DateTime)(this[this.tablezmainbill.billdateColumn]));
                }
                set {
                    this[this.tablezmainbill.billdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string partyName {
                get {
                    return ((string)(this[this.tablezmainbill.partyNameColumn]));
                }
                set {
                    this[this.tablezmainbill.partyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string station {
                get {
                    try {
                        return ((string)(this[this.tablezmainbill.stationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'station\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.stationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal total {
                get {
                    return ((decimal)(this[this.tablezmainbill.totalColumn]));
                }
                set {
                    this[this.tablezmainbill.totalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal serviceCharge {
                get {
                    try {
                        return ((decimal)(this[this.tablezmainbill.serviceChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serviceCharge\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.serviceChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal surcharge {
                get {
                    try {
                        return ((decimal)(this[this.tablezmainbill.surchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'surcharge\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.surchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal hsServiceCharge {
                get {
                    try {
                        return ((decimal)(this[this.tablezmainbill.hsServiceChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hsServiceCharge\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.hsServiceChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tax {
                get {
                    try {
                        return ((decimal)(this[this.tablezmainbill.taxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tax\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.taxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chequeno {
                get {
                    try {
                        return ((string)(this[this.tablezmainbill.chequenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chequeno\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.chequenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool billrecieve {
                get {
                    try {
                        return ((bool)(this[this.tablezmainbill.billrecieveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billrecieve\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.billrecieveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime billrcvdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablezmainbill.billrcvdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billrcvdate\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.billrcvdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime enddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablezmainbill.enddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'enddate\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.enddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cheque_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablezmainbill.Cheque_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Date\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.Cheque_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalInWords {
                get {
                    try {
                        return ((string)(this[this.tablezmainbill.TotalInWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalInWords\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.TotalInWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalTones {
                get {
                    try {
                        return ((string)(this[this.tablezmainbill.TotalTonesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTones\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.TotalTonesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalBags {
                get {
                    try {
                        return ((string)(this[this.tablezmainbill.TotalBagsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBags\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.TotalBagsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tds {
                get {
                    try {
                        return ((decimal)(this[this.tablezmainbill.tdsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tds\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.tdsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal otherexpense {
                get {
                    try {
                        return ((decimal)(this[this.tablezmainbill.otherexpenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherexpense\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.otherexpenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalrcvamount {
                get {
                    try {
                        return ((decimal)(this[this.tablezmainbill.totalrcvamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalrcvamount\' in table \'zmainbill\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablezmainbill.totalrcvamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuseridNull() {
                return this.IsNull(this.tablezmainbill.useridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuseridNull() {
                this[this.tablezmainbill.useridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbillidNull() {
                return this.IsNull(this.tablezmainbill.billidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbillidNull() {
                this[this.tablezmainbill.billidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstationNull() {
                return this.IsNull(this.tablezmainbill.stationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstationNull() {
                this[this.tablezmainbill.stationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsserviceChargeNull() {
                return this.IsNull(this.tablezmainbill.serviceChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetserviceChargeNull() {
                this[this.tablezmainbill.serviceChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssurchargeNull() {
                return this.IsNull(this.tablezmainbill.surchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsurchargeNull() {
                this[this.tablezmainbill.surchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshsServiceChargeNull() {
                return this.IsNull(this.tablezmainbill.hsServiceChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethsServiceChargeNull() {
                this[this.tablezmainbill.hsServiceChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstaxNull() {
                return this.IsNull(this.tablezmainbill.taxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettaxNull() {
                this[this.tablezmainbill.taxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschequenoNull() {
                return this.IsNull(this.tablezmainbill.chequenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchequenoNull() {
                this[this.tablezmainbill.chequenoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbillrecieveNull() {
                return this.IsNull(this.tablezmainbill.billrecieveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbillrecieveNull() {
                this[this.tablezmainbill.billrecieveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbillrcvdateNull() {
                return this.IsNull(this.tablezmainbill.billrcvdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbillrcvdateNull() {
                this[this.tablezmainbill.billrcvdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenddateNull() {
                return this.IsNull(this.tablezmainbill.enddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenddateNull() {
                this[this.tablezmainbill.enddateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tablezmainbill.Cheque_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tablezmainbill.Cheque_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalInWordsNull() {
                return this.IsNull(this.tablezmainbill.TotalInWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalInWordsNull() {
                this[this.tablezmainbill.TotalInWordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalTonesNull() {
                return this.IsNull(this.tablezmainbill.TotalTonesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalTonesNull() {
                this[this.tablezmainbill.TotalTonesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalBagsNull() {
                return this.IsNull(this.tablezmainbill.TotalBagsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalBagsNull() {
                this[this.tablezmainbill.TotalBagsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstdsNull() {
                return this.IsNull(this.tablezmainbill.tdsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettdsNull() {
                this[this.tablezmainbill.tdsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherexpenseNull() {
                return this.IsNull(this.tablezmainbill.otherexpenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherexpenseNull() {
                this[this.tablezmainbill.otherexpenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalrcvamountNull() {
                return this.IsNull(this.tablezmainbill.totalrcvamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalrcvamountNull() {
                this[this.tablezmainbill.totalrcvamountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class billRcvRow : global::System.Data.DataRow {
            
            private billRcvDataTable tablebillRcv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal billRcvRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebillRcv = ((billRcvDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Bill_ID {
                get {
                    return ((int)(this[this.tablebillRcv.Bill_IDColumn]));
                }
                set {
                    this[this.tablebillRcv.Bill_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int User_Id {
                get {
                    try {
                        return ((int)(this[this.tablebillRcv.User_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User Id\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.User_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Debit_Bill_No {
                get {
                    return ((int)(this[this.tablebillRcv.Debit_Bill_NoColumn]));
                }
                set {
                    this[this.tablebillRcv.Debit_Bill_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Bill_Date {
                get {
                    return ((global::System.DateTime)(this[this.tablebillRcv.Bill_DateColumn]));
                }
                set {
                    this[this.tablebillRcv.Bill_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Party_Name {
                get {
                    return ((string)(this[this.tablebillRcv.Party_NameColumn]));
                }
                set {
                    this[this.tablebillRcv.Party_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Station {
                get {
                    try {
                        return ((string)(this[this.tablebillRcv.StationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Station\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.StationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    return ((decimal)(this[this.tablebillRcv.TotalColumn]));
                }
                set {
                    this[this.tablebillRcv.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Service_Charge {
                get {
                    try {
                        return ((decimal)(this[this.tablebillRcv.Service_ChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Service Charge\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Service_ChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal H_S_Service_Charge {
                get {
                    try {
                        return ((decimal)(this[this.tablebillRcv.H_S_Service_ChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'H_S_Service Charge\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.H_S_Service_ChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tax {
                get {
                    try {
                        return ((decimal)(this[this.tablebillRcv.TaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tax\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cheque_Number {
                get {
                    try {
                        return ((string)(this[this.tablebillRcv.Cheque_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque Number\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Cheque_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Bill_Received {
                get {
                    try {
                        return ((bool)(this[this.tablebillRcv.Bill_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill Received\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Bill_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Bill_Received_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablebillRcv.Bill_Received_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill Received Date\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Bill_Received_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Start_Date {
                get {
                    return ((global::System.DateTime)(this[this.tablebillRcv.Start_DateColumn]));
                }
                set {
                    this[this.tablebillRcv.Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime End_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablebillRcv.End_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'End Date\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.End_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cheque_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablebillRcv.Cheque_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque Date\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Cheque_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_TDS {
                get {
                    try {
                        return ((decimal)(this[this.tablebillRcv.Total_TDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total TDS\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Total_TDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Other_Expense {
                get {
                    try {
                        return ((decimal)(this[this.tablebillRcv.Other_ExpenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Other Expense\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Other_ExpenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Received_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablebillRcv.Total_Received_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total Received Amount\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Total_Received_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablebillRcv.Balance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance Amount\' in table \'billRcv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillRcv.Balance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_IdNull() {
                return this.IsNull(this.tablebillRcv.User_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_IdNull() {
                this[this.tablebillRcv.User_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStationNull() {
                return this.IsNull(this.tablebillRcv.StationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStationNull() {
                this[this.tablebillRcv.StationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsService_ChargeNull() {
                return this.IsNull(this.tablebillRcv.Service_ChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetService_ChargeNull() {
                this[this.tablebillRcv.Service_ChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsH_S_Service_ChargeNull() {
                return this.IsNull(this.tablebillRcv.H_S_Service_ChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetH_S_Service_ChargeNull() {
                this[this.tablebillRcv.H_S_Service_ChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tablebillRcv.TaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tablebillRcv.TaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NumberNull() {
                return this.IsNull(this.tablebillRcv.Cheque_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NumberNull() {
                this[this.tablebillRcv.Cheque_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_ReceivedNull() {
                return this.IsNull(this.tablebillRcv.Bill_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_ReceivedNull() {
                this[this.tablebillRcv.Bill_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_Received_DateNull() {
                return this.IsNull(this.tablebillRcv.Bill_Received_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_Received_DateNull() {
                this[this.tablebillRcv.Bill_Received_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnd_DateNull() {
                return this.IsNull(this.tablebillRcv.End_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnd_DateNull() {
                this[this.tablebillRcv.End_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tablebillRcv.Cheque_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tablebillRcv.Cheque_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_TDSNull() {
                return this.IsNull(this.tablebillRcv.Total_TDSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_TDSNull() {
                this[this.tablebillRcv.Total_TDSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOther_ExpenseNull() {
                return this.IsNull(this.tablebillRcv.Other_ExpenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOther_ExpenseNull() {
                this[this.tablebillRcv.Other_ExpenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_Received_AmountNull() {
                return this.IsNull(this.tablebillRcv.Total_Received_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_Received_AmountNull() {
                this[this.tablebillRcv.Total_Received_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalance_AmountNull() {
                return this.IsNull(this.tablebillRcv.Balance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalance_AmountNull() {
                this[this.tablebillRcv.Balance_AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class billrcvPaymentDetRow : global::System.Data.DataRow {
            
            private billrcvPaymentDetDataTable tablebillrcvPaymentDet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal billrcvPaymentDetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablebillrcvPaymentDet = ((billrcvPaymentDetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Payment_Id {
                get {
                    return ((int)(this[this.tablebillrcvPaymentDet.Payment_IdColumn]));
                }
                set {
                    this[this.tablebillrcvPaymentDet.Payment_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Bill_Id {
                get {
                    try {
                        return ((int)(this[this.tablebillrcvPaymentDet.Bill_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill Id\' in table \'billrcvPaymentDet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillrcvPaymentDet.Bill_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChequeNumber {
                get {
                    try {
                        return ((string)(this[this.tablebillrcvPaymentDet.ChequeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeNumber\' in table \'billrcvPaymentDet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillrcvPaymentDet.ChequeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cheque_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablebillrcvPaymentDet.Cheque_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque Date\' in table \'billrcvPaymentDet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillrcvPaymentDet.Cheque_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cheque_Amount {
                get {
                    return ((decimal)(this[this.tablebillrcvPaymentDet.Cheque_AmountColumn]));
                }
                set {
                    this[this.tablebillrcvPaymentDet.Cheque_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TDS {
                get {
                    try {
                        return ((decimal)(this[this.tablebillrcvPaymentDet.TDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDS\' in table \'billrcvPaymentDet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillrcvPaymentDet.TDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Other_Expense {
                get {
                    try {
                        return ((decimal)(this[this.tablebillrcvPaymentDet.Other_ExpenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Other Expense\' in table \'billrcvPaymentDet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillrcvPaymentDet.Other_ExpenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tablebillrcvPaymentDet.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'billrcvPaymentDet\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablebillrcvPaymentDet.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_IdNull() {
                return this.IsNull(this.tablebillrcvPaymentDet.Bill_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_IdNull() {
                this[this.tablebillrcvPaymentDet.Bill_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeNumberNull() {
                return this.IsNull(this.tablebillrcvPaymentDet.ChequeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeNumberNull() {
                this[this.tablebillrcvPaymentDet.ChequeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_DateNull() {
                return this.IsNull(this.tablebillrcvPaymentDet.Cheque_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_DateNull() {
                this[this.tablebillrcvPaymentDet.Cheque_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTDSNull() {
                return this.IsNull(this.tablebillrcvPaymentDet.TDSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTDSNull() {
                this[this.tablebillrcvPaymentDet.TDSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOther_ExpenseNull() {
                return this.IsNull(this.tablebillrcvPaymentDet.Other_ExpenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOther_ExpenseNull() {
                this[this.tablebillrcvPaymentDet.Other_ExpenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tablebillrcvPaymentDet.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tablebillrcvPaymentDet.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class insertintopartpaymentRow : global::System.Data.DataRow {
            
            private insertintopartpaymentDataTable tableinsertintopartpayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal insertintopartpaymentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinsertintopartpayment = ((insertintopartpaymentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int paymentid {
                get {
                    return ((int)(this[this.tableinsertintopartpayment.paymentidColumn]));
                }
                set {
                    this[this.tableinsertintopartpayment.paymentidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int mnbillid {
                get {
                    try {
                        return ((int)(this[this.tableinsertintopartpayment.mnbillidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mnbillid\' in table \'insertintopartpayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsertintopartpayment.mnbillidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chequeno {
                get {
                    try {
                        return ((string)(this[this.tableinsertintopartpayment.chequenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chequeno\' in table \'insertintopartpayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsertintopartpayment.chequenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime chequedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableinsertintopartpayment.chequedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chequedate\' in table \'insertintopartpayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsertintopartpayment.chequedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal chequeamount {
                get {
                    return ((decimal)(this[this.tableinsertintopartpayment.chequeamountColumn]));
                }
                set {
                    this[this.tableinsertintopartpayment.chequeamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tds {
                get {
                    try {
                        return ((decimal)(this[this.tableinsertintopartpayment.tdsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tds\' in table \'insertintopartpayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsertintopartpayment.tdsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal otherexpense {
                get {
                    try {
                        return ((decimal)(this[this.tableinsertintopartpayment.otherexpenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherexpense\' in table \'insertintopartpayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsertintopartpayment.otherexpenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableinsertintopartpayment.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'insertintopartpayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsertintopartpayment.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime paymentdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableinsertintopartpayment.paymentdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paymentdate\' in table \'insertintopartpayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsertintopartpayment.paymentdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updatedate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableinsertintopartpayment.updatedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updatedate\' in table \'insertintopartpayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinsertintopartpayment.updatedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmnbillidNull() {
                return this.IsNull(this.tableinsertintopartpayment.mnbillidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmnbillidNull() {
                this[this.tableinsertintopartpayment.mnbillidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschequenoNull() {
                return this.IsNull(this.tableinsertintopartpayment.chequenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchequenoNull() {
                this[this.tableinsertintopartpayment.chequenoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschequedateNull() {
                return this.IsNull(this.tableinsertintopartpayment.chequedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchequedateNull() {
                this[this.tableinsertintopartpayment.chequedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstdsNull() {
                return this.IsNull(this.tableinsertintopartpayment.tdsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettdsNull() {
                this[this.tableinsertintopartpayment.tdsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherexpenseNull() {
                return this.IsNull(this.tableinsertintopartpayment.otherexpenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherexpenseNull() {
                this[this.tableinsertintopartpayment.otherexpenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableinsertintopartpayment.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableinsertintopartpayment.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspaymentdateNull() {
                return this.IsNull(this.tableinsertintopartpayment.paymentdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpaymentdateNull() {
                this[this.tableinsertintopartpayment.paymentdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdatedateNull() {
                return this.IsNull(this.tableinsertintopartpayment.updatedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdatedateNull() {
                this[this.tableinsertintopartpayment.updatedateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class zbillRowChangeEvent : global::System.EventArgs {
            
            private zbillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zbillRowChangeEvent(zbillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zbillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class zmainbillRowChangeEvent : global::System.EventArgs {
            
            private zmainbillRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zmainbillRowChangeEvent(zmainbillRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public zmainbillRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class billRcvRowChangeEvent : global::System.EventArgs {
            
            private billRcvRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billRcvRowChangeEvent(billRcvRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billRcvRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class billrcvPaymentDetRowChangeEvent : global::System.EventArgs {
            
            private billrcvPaymentDetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billrcvPaymentDetRowChangeEvent(billrcvPaymentDetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public billrcvPaymentDetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class insertintopartpaymentRowChangeEvent : global::System.EventArgs {
            
            private insertintopartpaymentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public insertintopartpaymentRowChangeEvent(insertintopartpaymentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public insertintopartpaymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SupremeTransport.zmaindatasetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class zbillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public zbillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "zbill";
            tableMapping.ColumnMappings.Add("billid", "billid");
            tableMapping.ColumnMappings.Add("mnbillid", "mnbillid");
            tableMapping.ColumnMappings.Add("userid", "userid");
            tableMapping.ColumnMappings.Add("billdate", "billdate");
            tableMapping.ColumnMappings.Add("gcnumber", "gcnumber");
            tableMapping.ColumnMappings.Add("chalanNumber", "chalanNumber");
            tableMapping.ColumnMappings.Add("truckNumber", "truckNumber");
            tableMapping.ColumnMappings.Add("goods", "goods");
            tableMapping.ColumnMappings.Add("bags", "bags");
            tableMapping.ColumnMappings.Add("tone", "tone");
            tableMapping.ColumnMappings.Add("rate", "rate");
            tableMapping.ColumnMappings.Add("amount", "amount");
            tableMapping.ColumnMappings.Add("unloadingdate", "unloadingdate");
            tableMapping.ColumnMappings.Add("billnumber", "billnumber");
            tableMapping.ColumnMappings.Add("expense", "expense");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "dbo.z_billinsert";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mnbillid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, "mnbillid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, "userid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, "billdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gcnumber", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "gcnumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chalanNumber", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "chalanNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@truckNumber", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "truckNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@goods", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "goods", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bags", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "bags", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tone", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "tone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rate", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, "rate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, "amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unloadingdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, "unloadingdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expense", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, "expense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SupremeTransport.Properties.Settings.Default.supremetempConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.z_billselect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     zah.bill.*\r\nFROM         zah.bill\r\nWHERE     (mnbillid = @Param1)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Param1", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "mnbillid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.z_upbill";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mnbillId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gcnumber", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chalannumber", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@trucknumber", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@goods", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bags", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tone", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rate", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unloading", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expense", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(zmaindataset.zbillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual zmaindataset.zbillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            zmaindataset.zbillDataTable dataTable = new zmaindataset.zbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(zmaindataset.zbillDataTable dataTable, global::System.Nullable<int> Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zbillDataTable GetDataBy(global::System.Nullable<int> Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((Param1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            zmaindataset.zbillDataTable dataTable = new zmaindataset.zbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBill(zmaindataset.zbillDataTable dataTable, global::System.Nullable<int> billid, global::System.Nullable<int> userid, global::System.Nullable<int> mnbillId, global::System.Nullable<global::System.DateTime> billdate, string gcnumber, string chalannumber, string trucknumber, string goods, string bags, string tone, global::System.Nullable<decimal> rate, global::System.Nullable<decimal> amount, global::System.Nullable<global::System.DateTime> unloading, global::System.Nullable<decimal> expense) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((billid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(billid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((userid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(userid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((mnbillId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(mnbillId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((billdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((gcnumber == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(gcnumber));
            }
            if ((chalannumber == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(chalannumber));
            }
            if ((trucknumber == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(trucknumber));
            }
            if ((goods == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(goods));
            }
            if ((bags == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(bags));
            }
            if ((tone == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(tone));
            }
            if ((rate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((decimal)(rate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((amount.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((decimal)(amount.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((unloading.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((System.DateTime)(unloading.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((expense.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((decimal)(expense.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zbillDataTable GetDataByBill(global::System.Nullable<int> billid, global::System.Nullable<int> userid, global::System.Nullable<int> mnbillId, global::System.Nullable<global::System.DateTime> billdate, string gcnumber, string chalannumber, string trucknumber, string goods, string bags, string tone, global::System.Nullable<decimal> rate, global::System.Nullable<decimal> amount, global::System.Nullable<global::System.DateTime> unloading, global::System.Nullable<decimal> expense) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((billid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(billid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((userid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(userid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((mnbillId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(mnbillId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((billdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((gcnumber == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(gcnumber));
            }
            if ((chalannumber == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(chalannumber));
            }
            if ((trucknumber == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(trucknumber));
            }
            if ((goods == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(goods));
            }
            if ((bags == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(bags));
            }
            if ((tone == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(tone));
            }
            if ((rate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((decimal)(rate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((amount.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((decimal)(amount.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((unloading.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((System.DateTime)(unloading.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((expense.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((decimal)(expense.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            zmaindataset.zbillDataTable dataTable = new zmaindataset.zbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(zmaindataset.zbillDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(zmaindataset dataSet) {
            return this.Adapter.Update(dataSet, "zbill");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> mnbillid, global::System.Nullable<int> userid, global::System.Nullable<global::System.DateTime> billdate, string gcnumber, string chalanNumber, string truckNumber, string goods, string bags, string tone, global::System.Nullable<decimal> rate, global::System.Nullable<decimal> amount, global::System.Nullable<global::System.DateTime> unloadingdate, global::System.Nullable<decimal> expense) {
            if ((mnbillid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(mnbillid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((userid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(userid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((billdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((gcnumber == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(gcnumber));
            }
            if ((chalanNumber == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(chalanNumber));
            }
            if ((truckNumber == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(truckNumber));
            }
            if ((goods == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(goods));
            }
            if ((bags == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(bags));
            }
            if ((tone == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(tone));
            }
            if ((rate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(rate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((amount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(amount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((unloadingdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(unloadingdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((expense.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(expense.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class zmainbillTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public zmainbillTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "zmainbill";
            tableMapping.ColumnMappings.Add("mnbillId", "mnbillId");
            tableMapping.ColumnMappings.Add("userid", "userid");
            tableMapping.ColumnMappings.Add("billid", "billid");
            tableMapping.ColumnMappings.Add("debitBillNo", "debitBillNo");
            tableMapping.ColumnMappings.Add("billdate", "billdate");
            tableMapping.ColumnMappings.Add("partyName", "partyName");
            tableMapping.ColumnMappings.Add("station", "station");
            tableMapping.ColumnMappings.Add("total", "total");
            tableMapping.ColumnMappings.Add("serviceCharge", "serviceCharge");
            tableMapping.ColumnMappings.Add("surcharge", "surcharge");
            tableMapping.ColumnMappings.Add("hsServiceCharge", "hsServiceCharge");
            tableMapping.ColumnMappings.Add("tax", "tax");
            tableMapping.ColumnMappings.Add("chequeno", "chequeno");
            tableMapping.ColumnMappings.Add("billrecieve", "billrecieve");
            tableMapping.ColumnMappings.Add("billrcvdate", "billrcvdate");
            tableMapping.ColumnMappings.Add("enddate", "enddate");
            tableMapping.ColumnMappings.Add("Cheque_Date", "Cheque_Date");
            tableMapping.ColumnMappings.Add("TotalInWords", "TotalInWords");
            tableMapping.ColumnMappings.Add("TotalTones", "TotalTones");
            tableMapping.ColumnMappings.Add("TotalBags", "TotalBags");
            tableMapping.ColumnMappings.Add("tds", "tds");
            tableMapping.ColumnMappings.Add("otherexpense", "otherexpense");
            tableMapping.ColumnMappings.Add("totalrcvamount", "totalrcvamount");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "dbo.zinsert";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, "userid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, "billid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@debitBillNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, "debitBillNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, "billdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@partyName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "partyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "station", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@total", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, "total", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@serviceCharge", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, "serviceCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surcharge", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, "surcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hsServiceCharge", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, "hsServiceCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tax", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, "tax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chequeno", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "chequeno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billrecieve", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, "billrecieve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billrcvdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, "billrcvdate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billenddate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, "enddate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalinwords", global::System.Data.SqlDbType.VarChar, 60, global::System.Data.ParameterDirection.Input, 0, 0, "TotalInWords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalbags", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TotalBags", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totaltones", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "TotalTones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SupremeTransport.Properties.Settings.Default.supremetempConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[13];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.zselect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.z_updateMainBill";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@debitBillNo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@partyName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@total", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@serviceCharge", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@surcharge", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hsServiceCharge", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tax", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalinwords", global::System.Data.SqlDbType.VarChar, 60, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalbags", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totaltones", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mnbillId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.z_deletemain";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mnbillid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.z_MainSearch";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@partyname", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dbno", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.z_MainSearchDebitNo";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dbno", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.z_MainSearchByStationAndParty";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@partyname", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "dbo.z_MainSearchByParty";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@partyname", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "dbo.z_MainSearchByStationPartyAndDbno";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@partyname", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dbno", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "dbo.z_MainSearchByStation";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@station", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "zah.ZahPaymentRecieved";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@debitbillno", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paymentdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[9].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billrecieved", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[10] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "dbo.z_selectall";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[10].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "dbo.z_MainSearchByBillDate";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[11].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billdate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[12] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "SELECT     zah.getbillid() AS mainbill";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(zmaindataset.zmainbillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual zmaindataset.zmainbillDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(
                    zmaindataset.zmainbillDataTable dataTable, 
                    global::System.Nullable<int> userid, 
                    global::System.Nullable<int> billid, 
                    global::System.Nullable<int> debitBillNo, 
                    global::System.Nullable<global::System.DateTime> billdate, 
                    string partyName, 
                    string station, 
                    global::System.Nullable<decimal> total, 
                    global::System.Nullable<decimal> serviceCharge, 
                    global::System.Nullable<decimal> surcharge, 
                    global::System.Nullable<decimal> hsServiceCharge, 
                    global::System.Nullable<decimal> tax, 
                    string totalinwords, 
                    string totalbags, 
                    string totaltones, 
                    global::System.Nullable<int> mnbillId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((userid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(userid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((billid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(billid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((debitBillNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(debitBillNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((billdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((partyName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(partyName));
            }
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(station));
            }
            if ((total.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((decimal)(total.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((serviceCharge.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((decimal)(serviceCharge.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((surcharge.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(surcharge.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((hsServiceCharge.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((decimal)(hsServiceCharge.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((tax.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((decimal)(tax.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((totalinwords == null)) {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = ((string)(totalinwords));
            }
            if ((totalbags == null)) {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = ((string)(totalbags));
            }
            if ((totaltones == null)) {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = ((string)(totaltones));
            }
            if ((mnbillId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((int)(mnbillId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataBy(global::System.Nullable<int> userid, global::System.Nullable<int> billid, global::System.Nullable<int> debitBillNo, global::System.Nullable<global::System.DateTime> billdate, string partyName, string station, global::System.Nullable<decimal> total, global::System.Nullable<decimal> serviceCharge, global::System.Nullable<decimal> surcharge, global::System.Nullable<decimal> hsServiceCharge, global::System.Nullable<decimal> tax, string totalinwords, string totalbags, string totaltones, global::System.Nullable<int> mnbillId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((userid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(userid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((billid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(billid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((debitBillNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(debitBillNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((billdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((partyName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(partyName));
            }
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(station));
            }
            if ((total.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((decimal)(total.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((serviceCharge.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((decimal)(serviceCharge.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((surcharge.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(surcharge.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((hsServiceCharge.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((decimal)(hsServiceCharge.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((tax.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((decimal)(tax.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((totalinwords == null)) {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = ((string)(totalinwords));
            }
            if ((totalbags == null)) {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = ((string)(totalbags));
            }
            if ((totaltones == null)) {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = ((string)(totaltones));
            }
            if ((mnbillId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((int)(mnbillId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBydeleteMain(zmaindataset.zmainbillDataTable dataTable, global::System.Nullable<int> mnbillid) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((mnbillid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(mnbillid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataBydeleteMain(global::System.Nullable<int> mnbillid) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((mnbillid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(mnbillid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMainSearch(zmaindataset.zmainbillDataTable dataTable, string partyname, string station, global::System.Nullable<int> dbno, global::System.Nullable<global::System.DateTime> billdate) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((partyname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(partyname));
            }
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(station));
            }
            if ((dbno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(dbno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((billdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataByMainSearch(string partyname, string station, global::System.Nullable<int> dbno, global::System.Nullable<global::System.DateTime> billdate) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((partyname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(partyname));
            }
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(station));
            }
            if ((dbno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(dbno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((billdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMainSearchDebitBillNo(zmaindataset.zmainbillDataTable dataTable, global::System.Nullable<int> dbno) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((dbno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(dbno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataByMainSearchDebitBillNo(global::System.Nullable<int> dbno) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((dbno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(dbno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMainSearchPartyAndStation(zmaindataset.zmainbillDataTable dataTable, string partyname, string station) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((partyname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(partyname));
            }
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(station));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataByMainSearchPartyAndStation(string partyname, string station) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((partyname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(partyname));
            }
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(station));
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMainSearchPartyName(zmaindataset.zmainbillDataTable dataTable, string partyname) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((partyname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(partyname));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataByMainSearchPartyName(string partyname) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((partyname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(partyname));
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMainSearchPartyStationAndDbno(zmaindataset.zmainbillDataTable dataTable, string partyname, string station, global::System.Nullable<int> dbno) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((partyname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(partyname));
            }
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(station));
            }
            if ((dbno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(dbno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataByMainSearchPartyStationAndDbno(string partyname, string station, global::System.Nullable<int> dbno) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((partyname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(partyname));
            }
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(station));
            }
            if ((dbno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(dbno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByMainSearchStation(zmaindataset.zmainbillDataTable dataTable, string station) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(station));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataByMainSearchStation(string station) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((station == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(station));
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPaymentRecieved(zmaindataset.zmainbillDataTable dataTable, global::System.Nullable<int> debitbillno, global::System.Nullable<global::System.DateTime> paymentdate, global::System.Nullable<bool> billrecieved) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            if ((debitbillno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(debitbillno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((paymentdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(paymentdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((billrecieved.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(billrecieved.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataByPaymentRecieved(global::System.Nullable<int> debitbillno, global::System.Nullable<global::System.DateTime> paymentdate, global::System.Nullable<bool> billrecieved) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            if ((debitbillno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(debitbillno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((paymentdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(paymentdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((billrecieved.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(billrecieved.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySelectAll(zmaindataset.zmainbillDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataBySelectAll() {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillMainSearchByBillDate(zmaindataset.zmainbillDataTable dataTable, global::System.Nullable<global::System.DateTime> billdate) {
            this.Adapter.SelectCommand = this.CommandCollection[11];
            if ((billdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.zmainbillDataTable GetDataByMainSearchByBillDate(global::System.Nullable<global::System.DateTime> billdate) {
            this.Adapter.SelectCommand = this.CommandCollection[11];
            if ((billdate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            zmaindataset.zmainbillDataTable dataTable = new zmaindataset.zmainbillDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(zmaindataset.zmainbillDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(zmaindataset dataSet) {
            return this.Adapter.Update(dataSet, "zmainbill");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> userid, 
                    global::System.Nullable<int> billid, 
                    global::System.Nullable<int> debitBillNo, 
                    global::System.Nullable<global::System.DateTime> billdate, 
                    string partyName, 
                    string station, 
                    global::System.Nullable<decimal> total, 
                    global::System.Nullable<decimal> serviceCharge, 
                    global::System.Nullable<decimal> surcharge, 
                    global::System.Nullable<decimal> hsServiceCharge, 
                    global::System.Nullable<decimal> tax, 
                    string chequeno, 
                    global::System.Nullable<bool> billrecieve, 
                    global::System.Nullable<global::System.DateTime> billrcvdate, 
                    global::System.Nullable<global::System.DateTime> billenddate, 
                    string totalinwords, 
                    string totalbags, 
                    string totaltones) {
            if ((userid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(userid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((billid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(billid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((debitBillNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(debitBillNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((billdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(billdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((partyName == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(partyName));
            }
            if ((station == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(station));
            }
            if ((total.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(total.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((serviceCharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(serviceCharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((surcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(surcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((hsServiceCharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(hsServiceCharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((tax.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(tax.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((chequeno == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(chequeno));
            }
            if ((billrecieve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(billrecieve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((billrcvdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(billrcvdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((billenddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(billenddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((totalinwords == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(totalinwords));
            }
            if ((totalbags == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(totalbags));
            }
            if ((totaltones == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(totaltones));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetBillIdTable() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[12];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class billRcvTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public billRcvTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "billRcv";
            tableMapping.ColumnMappings.Add("Bill ID", "Bill ID");
            tableMapping.ColumnMappings.Add("User Id", "User Id");
            tableMapping.ColumnMappings.Add("Debit Bill No", "Debit Bill No");
            tableMapping.ColumnMappings.Add("Bill Date", "Bill Date");
            tableMapping.ColumnMappings.Add("Party Name", "Party Name");
            tableMapping.ColumnMappings.Add("Station", "Station");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("Service Charge", "Service Charge");
            tableMapping.ColumnMappings.Add("H.S.Service Charge", "H_S_Service Charge");
            tableMapping.ColumnMappings.Add("Tax", "Tax");
            tableMapping.ColumnMappings.Add("Cheque Number", "Cheque Number");
            tableMapping.ColumnMappings.Add("Bill Received", "Bill Received");
            tableMapping.ColumnMappings.Add("Bill Received Date", "Bill Received Date");
            tableMapping.ColumnMappings.Add("Start Date", "Start Date");
            tableMapping.ColumnMappings.Add("End Date", "End Date");
            tableMapping.ColumnMappings.Add("Cheque Date", "Cheque Date");
            tableMapping.ColumnMappings.Add("Total TDS", "Total TDS");
            tableMapping.ColumnMappings.Add("Other Expense", "Other Expense");
            tableMapping.ColumnMappings.Add("Total Received Amount", "Total Received Amount");
            tableMapping.ColumnMappings.Add("Balance Amount", "Balance Amount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SupremeTransport.Properties.Settings.Default.supremetempConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "zah.billRcv";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "zah.billnotrcv";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "zah.billrcvall";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "zah.SearchPartPayment";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@debitbillno", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByBillRcv(zmaindataset.billRcvDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual zmaindataset.billRcvDataTable GetDataByBillRcv() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            zmaindataset.billRcvDataTable dataTable = new zmaindataset.billRcvDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBillNotRcv(zmaindataset.billRcvDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.billRcvDataTable GetDataByBillNotRcv() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            zmaindataset.billRcvDataTable dataTable = new zmaindataset.billRcvDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBillRcvAll(zmaindataset.billRcvDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.billRcvDataTable GetDataByBillRcvAll() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            zmaindataset.billRcvDataTable dataTable = new zmaindataset.billRcvDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySearchPartPayment(zmaindataset.billRcvDataTable dataTable, global::System.Nullable<int> debitbillno) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((debitbillno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(debitbillno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual zmaindataset.billRcvDataTable GetDataBySearchPartPayment(global::System.Nullable<int> debitbillno) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((debitbillno.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(debitbillno.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            zmaindataset.billRcvDataTable dataTable = new zmaindataset.billRcvDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class billrcvPaymentDetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public billrcvPaymentDetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "billrcvPaymentDet";
            tableMapping.ColumnMappings.Add("Payment Id", "Payment Id");
            tableMapping.ColumnMappings.Add("Bill Id", "Bill Id");
            tableMapping.ColumnMappings.Add("ChequeNumber", "ChequeNumber");
            tableMapping.ColumnMappings.Add("Cheque Date", "Cheque Date");
            tableMapping.ColumnMappings.Add("Cheque Amount", "Cheque Amount");
            tableMapping.ColumnMappings.Add("TDS", "TDS");
            tableMapping.ColumnMappings.Add("Other Expense", "Other Expense");
            tableMapping.ColumnMappings.Add("Total", "Total");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SupremeTransport.Properties.Settings.Default.supremetempConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "zah.billrcvPaymentDet";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mnbillid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(zmaindataset.billrcvPaymentDetDataTable dataTable, global::System.Nullable<int> mnbillid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((mnbillid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(mnbillid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual zmaindataset.billrcvPaymentDetDataTable GetData(global::System.Nullable<int> mnbillid) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((mnbillid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(mnbillid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            zmaindataset.billrcvPaymentDetDataTable dataTable = new zmaindataset.billrcvPaymentDetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class insertintopartpaymentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public insertintopartpaymentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "insertintopartpayment";
            tableMapping.ColumnMappings.Add("paymentid", "paymentid");
            tableMapping.ColumnMappings.Add("mnbillid", "mnbillid");
            tableMapping.ColumnMappings.Add("chequeno", "chequeno");
            tableMapping.ColumnMappings.Add("chequedate", "chequedate");
            tableMapping.ColumnMappings.Add("chequeamount", "chequeamount");
            tableMapping.ColumnMappings.Add("tds", "tds");
            tableMapping.ColumnMappings.Add("otherexpense", "otherexpense");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("paymentdate", "paymentdate");
            tableMapping.ColumnMappings.Add("updatedate", "updatedate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SupremeTransport.Properties.Settings.Default.supremetempConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "zah.insertintopartpayment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mnbillid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chequeno", global::System.Data.SqlDbType.NVarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chequedate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@chequeamount", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tds", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherexpense", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@total", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(zmaindataset.insertintopartpaymentDataTable dataTable, global::System.Nullable<int> mnbillid, string chequeno, global::System.Nullable<global::System.DateTime> chequedate, global::System.Nullable<decimal> chequeamount, global::System.Nullable<decimal> tds, global::System.Nullable<decimal> otherexpense, global::System.Nullable<decimal> total) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((mnbillid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(mnbillid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((chequeno == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(chequeno));
            }
            if ((chequedate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(chequedate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((chequeamount.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(chequeamount.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((tds.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((decimal)(tds.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((otherexpense.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((decimal)(otherexpense.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((total.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((decimal)(total.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual zmaindataset.insertintopartpaymentDataTable GetData(global::System.Nullable<int> mnbillid, string chequeno, global::System.Nullable<global::System.DateTime> chequedate, global::System.Nullable<decimal> chequeamount, global::System.Nullable<decimal> tds, global::System.Nullable<decimal> otherexpense, global::System.Nullable<decimal> total) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((mnbillid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(mnbillid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((chequeno == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(chequeno));
            }
            if ((chequedate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(chequedate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((chequeamount.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((decimal)(chequeamount.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((tds.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((decimal)(tds.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((otherexpense.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((decimal)(otherexpense.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((total.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((decimal)(total.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            zmaindataset.insertintopartpaymentDataTable dataTable = new zmaindataset.insertintopartpaymentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591