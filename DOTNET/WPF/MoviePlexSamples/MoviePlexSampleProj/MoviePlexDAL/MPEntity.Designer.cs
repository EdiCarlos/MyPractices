//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MoviePlexModel", "FK_ck_fk_mp_address_groupid", "MP_AddressGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_AddressGroups), "MP_Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_Address), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "FK_ck_fk_mp_city_stateid", "MP_State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_State), "MP_City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_City), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "FK_ck_fk_mp_zip_cityid", "MP_City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_City), "MP_ZipCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_ZipCodes), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "FK_ck_fk_mp_state_countryid", "MP_Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_Country), "MP_State", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_State), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_mp_Movies_genereid", "MP_Genere", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MoviePlexDAL.MP_Genere), "MP_Movies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_Movies), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_mp_Movies_LanguageCode", "MP_Language", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MoviePlexDAL.MP_Language), "MP_Movies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_Movies), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_mp_Movies_certificationid", "MP_MovieCertifications", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MoviePlexDAL.MP_MovieCertifications), "MP_Movies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_Movies), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_mp_Show_movie_id", "MP_Movies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_Movies), "MP_Shows", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_Shows), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_mp_Shows_screen_id", "MP_Screens", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_Screens), "MP_Shows", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_Shows), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_screentseats_Screenid", "MP_Screens", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_Screens), "MP_ScreenSeats", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_ScreenSeats), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_ScreenSeats_ZoneId", "MP_ScreenZones", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_ScreenZones), "MP_ScreenSeats", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_ScreenSeats), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_mp_Zone_zoneid", "MP_ScreenZones", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_ScreenZones), "MP_ShowCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_ShowCost), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "ck_fk_mp_showcost_showid", "MP_Shows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_Shows), "MP_ShowCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_ShowCost), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "FK_ck_fk_ShowReservation_showid", "MP_Shows", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoviePlexDAL.MP_Shows), "MP_ShowReservations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_ShowReservations), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_TheatersBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MoviePlexDAL.MP_TheatersBrand), "MP_Theaters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_Theaters), true)]
[assembly: EdmRelationshipAttribute("MoviePlexModel", "MP_ReservedSeats", "MP_ShowReservations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_ShowReservations), "MP_ScreenSeats", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoviePlexDAL.MP_ScreenSeats))]

#endregion

namespace MoviePlexDAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MoviePlexEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MoviePlexEntities object using the connection string found in the 'MoviePlexEntities' section of the application configuration file.
        /// </summary>
        public MoviePlexEntities() : base("name=MoviePlexEntities", "MoviePlexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MoviePlexEntities object.
        /// </summary>
        public MoviePlexEntities(string connectionString) : base(connectionString, "MoviePlexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MoviePlexEntities object.
        /// </summary>
        public MoviePlexEntities(EntityConnection connection) : base(connection, "MoviePlexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_Address> MP_Address
        {
            get
            {
                if ((_MP_Address == null))
                {
                    _MP_Address = base.CreateObjectSet<MP_Address>("MP_Address");
                }
                return _MP_Address;
            }
        }
        private ObjectSet<MP_Address> _MP_Address;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_AddressGroups> MP_AddressGroups
        {
            get
            {
                if ((_MP_AddressGroups == null))
                {
                    _MP_AddressGroups = base.CreateObjectSet<MP_AddressGroups>("MP_AddressGroups");
                }
                return _MP_AddressGroups;
            }
        }
        private ObjectSet<MP_AddressGroups> _MP_AddressGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_City> MP_City
        {
            get
            {
                if ((_MP_City == null))
                {
                    _MP_City = base.CreateObjectSet<MP_City>("MP_City");
                }
                return _MP_City;
            }
        }
        private ObjectSet<MP_City> _MP_City;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_Country> MP_Country
        {
            get
            {
                if ((_MP_Country == null))
                {
                    _MP_Country = base.CreateObjectSet<MP_Country>("MP_Country");
                }
                return _MP_Country;
            }
        }
        private ObjectSet<MP_Country> _MP_Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_Genere> MP_Genere
        {
            get
            {
                if ((_MP_Genere == null))
                {
                    _MP_Genere = base.CreateObjectSet<MP_Genere>("MP_Genere");
                }
                return _MP_Genere;
            }
        }
        private ObjectSet<MP_Genere> _MP_Genere;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_Language> MP_Language
        {
            get
            {
                if ((_MP_Language == null))
                {
                    _MP_Language = base.CreateObjectSet<MP_Language>("MP_Language");
                }
                return _MP_Language;
            }
        }
        private ObjectSet<MP_Language> _MP_Language;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_MovieCertifications> MP_MovieCertifications
        {
            get
            {
                if ((_MP_MovieCertifications == null))
                {
                    _MP_MovieCertifications = base.CreateObjectSet<MP_MovieCertifications>("MP_MovieCertifications");
                }
                return _MP_MovieCertifications;
            }
        }
        private ObjectSet<MP_MovieCertifications> _MP_MovieCertifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_Movies> MP_Movies
        {
            get
            {
                if ((_MP_Movies == null))
                {
                    _MP_Movies = base.CreateObjectSet<MP_Movies>("MP_Movies");
                }
                return _MP_Movies;
            }
        }
        private ObjectSet<MP_Movies> _MP_Movies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_Screens> MP_Screens
        {
            get
            {
                if ((_MP_Screens == null))
                {
                    _MP_Screens = base.CreateObjectSet<MP_Screens>("MP_Screens");
                }
                return _MP_Screens;
            }
        }
        private ObjectSet<MP_Screens> _MP_Screens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_ScreenSeats> MP_ScreenSeats
        {
            get
            {
                if ((_MP_ScreenSeats == null))
                {
                    _MP_ScreenSeats = base.CreateObjectSet<MP_ScreenSeats>("MP_ScreenSeats");
                }
                return _MP_ScreenSeats;
            }
        }
        private ObjectSet<MP_ScreenSeats> _MP_ScreenSeats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_ScreenZones> MP_ScreenZones
        {
            get
            {
                if ((_MP_ScreenZones == null))
                {
                    _MP_ScreenZones = base.CreateObjectSet<MP_ScreenZones>("MP_ScreenZones");
                }
                return _MP_ScreenZones;
            }
        }
        private ObjectSet<MP_ScreenZones> _MP_ScreenZones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_ShowCost> MP_ShowCost
        {
            get
            {
                if ((_MP_ShowCost == null))
                {
                    _MP_ShowCost = base.CreateObjectSet<MP_ShowCost>("MP_ShowCost");
                }
                return _MP_ShowCost;
            }
        }
        private ObjectSet<MP_ShowCost> _MP_ShowCost;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_ShowReservations> MP_ShowReservations
        {
            get
            {
                if ((_MP_ShowReservations == null))
                {
                    _MP_ShowReservations = base.CreateObjectSet<MP_ShowReservations>("MP_ShowReservations");
                }
                return _MP_ShowReservations;
            }
        }
        private ObjectSet<MP_ShowReservations> _MP_ShowReservations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_Shows> MP_Shows
        {
            get
            {
                if ((_MP_Shows == null))
                {
                    _MP_Shows = base.CreateObjectSet<MP_Shows>("MP_Shows");
                }
                return _MP_Shows;
            }
        }
        private ObjectSet<MP_Shows> _MP_Shows;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_State> MP_State
        {
            get
            {
                if ((_MP_State == null))
                {
                    _MP_State = base.CreateObjectSet<MP_State>("MP_State");
                }
                return _MP_State;
            }
        }
        private ObjectSet<MP_State> _MP_State;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_Theaters> MP_Theaters
        {
            get
            {
                if ((_MP_Theaters == null))
                {
                    _MP_Theaters = base.CreateObjectSet<MP_Theaters>("MP_Theaters");
                }
                return _MP_Theaters;
            }
        }
        private ObjectSet<MP_Theaters> _MP_Theaters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_TheatersBrand> MP_TheatersBrand
        {
            get
            {
                if ((_MP_TheatersBrand == null))
                {
                    _MP_TheatersBrand = base.CreateObjectSet<MP_TheatersBrand>("MP_TheatersBrand");
                }
                return _MP_TheatersBrand;
            }
        }
        private ObjectSet<MP_TheatersBrand> _MP_TheatersBrand;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_UserInfo> MP_UserInfo
        {
            get
            {
                if ((_MP_UserInfo == null))
                {
                    _MP_UserInfo = base.CreateObjectSet<MP_UserInfo>("MP_UserInfo");
                }
                return _MP_UserInfo;
            }
        }
        private ObjectSet<MP_UserInfo> _MP_UserInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MP_ZipCodes> MP_ZipCodes
        {
            get
            {
                if ((_MP_ZipCodes == null))
                {
                    _MP_ZipCodes = base.CreateObjectSet<MP_ZipCodes>("MP_ZipCodes");
                }
                return _MP_ZipCodes;
            }
        }
        private ObjectSet<MP_ZipCodes> _MP_ZipCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_Address EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_Address(MP_Address mP_Address)
        {
            base.AddObject("MP_Address", mP_Address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_AddressGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_AddressGroups(MP_AddressGroups mP_AddressGroups)
        {
            base.AddObject("MP_AddressGroups", mP_AddressGroups);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_City EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_City(MP_City mP_City)
        {
            base.AddObject("MP_City", mP_City);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_Country(MP_Country mP_Country)
        {
            base.AddObject("MP_Country", mP_Country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_Genere EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_Genere(MP_Genere mP_Genere)
        {
            base.AddObject("MP_Genere", mP_Genere);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_Language EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_Language(MP_Language mP_Language)
        {
            base.AddObject("MP_Language", mP_Language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_MovieCertifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_MovieCertifications(MP_MovieCertifications mP_MovieCertifications)
        {
            base.AddObject("MP_MovieCertifications", mP_MovieCertifications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_Movies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_Movies(MP_Movies mP_Movies)
        {
            base.AddObject("MP_Movies", mP_Movies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_Screens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_Screens(MP_Screens mP_Screens)
        {
            base.AddObject("MP_Screens", mP_Screens);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_ScreenSeats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_ScreenSeats(MP_ScreenSeats mP_ScreenSeats)
        {
            base.AddObject("MP_ScreenSeats", mP_ScreenSeats);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_ScreenZones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_ScreenZones(MP_ScreenZones mP_ScreenZones)
        {
            base.AddObject("MP_ScreenZones", mP_ScreenZones);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_ShowCost EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_ShowCost(MP_ShowCost mP_ShowCost)
        {
            base.AddObject("MP_ShowCost", mP_ShowCost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_ShowReservations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_ShowReservations(MP_ShowReservations mP_ShowReservations)
        {
            base.AddObject("MP_ShowReservations", mP_ShowReservations);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_Shows EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_Shows(MP_Shows mP_Shows)
        {
            base.AddObject("MP_Shows", mP_Shows);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_State EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_State(MP_State mP_State)
        {
            base.AddObject("MP_State", mP_State);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_Theaters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_Theaters(MP_Theaters mP_Theaters)
        {
            base.AddObject("MP_Theaters", mP_Theaters);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_TheatersBrand EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_TheatersBrand(MP_TheatersBrand mP_TheatersBrand)
        {
            base.AddObject("MP_TheatersBrand", mP_TheatersBrand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_UserInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_UserInfo(MP_UserInfo mP_UserInfo)
        {
            base.AddObject("MP_UserInfo", mP_UserInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MP_ZipCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMP_ZipCodes(MP_ZipCodes mP_ZipCodes)
        {
            base.AddObject("MP_ZipCodes", mP_ZipCodes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_Address object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="referenceId">Initial value of the ReferenceId property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="addressGroupId">Initial value of the AddressGroupId property.</param>
        public static MP_Address CreateMP_Address(global::System.Int32 addressId, global::System.Int32 referenceId, global::System.String address1, global::System.Int32 addressGroupId)
        {
            MP_Address mP_Address = new MP_Address();
            mP_Address.AddressId = addressId;
            mP_Address.ReferenceId = referenceId;
            mP_Address.Address1 = address1;
            mP_Address.AddressGroupId = addressGroupId;
            return mP_Address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReferenceId
        {
            get
            {
                return _ReferenceId;
            }
            set
            {
                OnReferenceIdChanging(value);
                ReportPropertyChanging("ReferenceId");
                _ReferenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceId");
                OnReferenceIdChanged();
            }
        }
        private global::System.Int32 _ReferenceId;
        partial void OnReferenceIdChanging(global::System.Int32 value);
        partial void OnReferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressGroupId
        {
            get
            {
                return _AddressGroupId;
            }
            set
            {
                OnAddressGroupIdChanging(value);
                ReportPropertyChanging("AddressGroupId");
                _AddressGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressGroupId");
                OnAddressGroupIdChanged();
            }
        }
        private global::System.Int32 _AddressGroupId;
        partial void OnAddressGroupIdChanging(global::System.Int32 value);
        partial void OnAddressGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_address_groupid", "MP_AddressGroups")]
        public MP_AddressGroups MP_AddressGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_AddressGroups>("MoviePlexModel.FK_ck_fk_mp_address_groupid", "MP_AddressGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_AddressGroups>("MoviePlexModel.FK_ck_fk_mp_address_groupid", "MP_AddressGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_AddressGroups> MP_AddressGroupsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_AddressGroups>("MoviePlexModel.FK_ck_fk_mp_address_groupid", "MP_AddressGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_AddressGroups>("MoviePlexModel.FK_ck_fk_mp_address_groupid", "MP_AddressGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_AddressGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_AddressGroups : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_AddressGroups object.
        /// </summary>
        /// <param name="addressGroupId">Initial value of the AddressGroupId property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="zipCodeId">Initial value of the ZipCodeId property.</param>
        public static MP_AddressGroups CreateMP_AddressGroups(global::System.Int32 addressGroupId, global::System.Int32 countryId, global::System.Int32 cityId, global::System.Int32 stateId, global::System.Int32 zipCodeId)
        {
            MP_AddressGroups mP_AddressGroups = new MP_AddressGroups();
            mP_AddressGroups.AddressGroupId = addressGroupId;
            mP_AddressGroups.CountryId = countryId;
            mP_AddressGroups.CityId = cityId;
            mP_AddressGroups.StateId = stateId;
            mP_AddressGroups.ZipCodeId = zipCodeId;
            return mP_AddressGroups;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressGroupId
        {
            get
            {
                return _AddressGroupId;
            }
            set
            {
                if (_AddressGroupId != value)
                {
                    OnAddressGroupIdChanging(value);
                    ReportPropertyChanging("AddressGroupId");
                    _AddressGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressGroupId");
                    OnAddressGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressGroupId;
        partial void OnAddressGroupIdChanging(global::System.Int32 value);
        partial void OnAddressGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCodeId
        {
            get
            {
                return _ZipCodeId;
            }
            set
            {
                OnZipCodeIdChanging(value);
                ReportPropertyChanging("ZipCodeId");
                _ZipCodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCodeId");
                OnZipCodeIdChanged();
            }
        }
        private global::System.Int32 _ZipCodeId;
        partial void OnZipCodeIdChanging(global::System.Int32 value);
        partial void OnZipCodeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_address_groupid", "MP_Address")]
        public EntityCollection<MP_Address> MP_Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_Address>("MoviePlexModel.FK_ck_fk_mp_address_groupid", "MP_Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_Address>("MoviePlexModel.FK_ck_fk_mp_address_groupid", "MP_Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_City object.
        /// </summary>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        public static MP_City CreateMP_City(global::System.Int32 cityId, global::System.Int32 stateId, global::System.String cityName)
        {
            MP_City mP_City = new MP_City();
            mP_City.CityId = cityId;
            mP_City.StateId = stateId;
            mP_City.CityName = cityName;
            return mP_City;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_city_stateid", "MP_State")]
        public MP_State MP_State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_State>("MoviePlexModel.FK_ck_fk_mp_city_stateid", "MP_State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_State>("MoviePlexModel.FK_ck_fk_mp_city_stateid", "MP_State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_State> MP_StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_State>("MoviePlexModel.FK_ck_fk_mp_city_stateid", "MP_State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_State>("MoviePlexModel.FK_ck_fk_mp_city_stateid", "MP_State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_zip_cityid", "MP_ZipCodes")]
        public EntityCollection<MP_ZipCodes> MP_ZipCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_ZipCodes>("MoviePlexModel.FK_ck_fk_mp_zip_cityid", "MP_ZipCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_ZipCodes>("MoviePlexModel.FK_ck_fk_mp_zip_cityid", "MP_ZipCodes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static MP_Country CreateMP_Country(global::System.Int32 countryId, global::System.String countryName)
        {
            MP_Country mP_Country = new MP_Country();
            mP_Country.CountryId = countryId;
            mP_Country.CountryName = countryName;
            return mP_Country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryISOCode
        {
            get
            {
                return _CountryISOCode;
            }
            set
            {
                OnCountryISOCodeChanging(value);
                ReportPropertyChanging("CountryISOCode");
                _CountryISOCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryISOCode");
                OnCountryISOCodeChanged();
            }
        }
        private global::System.String _CountryISOCode;
        partial void OnCountryISOCodeChanging(global::System.String value);
        partial void OnCountryISOCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_state_countryid", "MP_State")]
        public EntityCollection<MP_State> MP_State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_State>("MoviePlexModel.FK_ck_fk_mp_state_countryid", "MP_State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_State>("MoviePlexModel.FK_ck_fk_mp_state_countryid", "MP_State", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_Genere")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_Genere : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_Genere object.
        /// </summary>
        /// <param name="genereID">Initial value of the GenereID property.</param>
        /// <param name="genereType">Initial value of the GenereType property.</param>
        public static MP_Genere CreateMP_Genere(global::System.Int32 genereID, global::System.String genereType)
        {
            MP_Genere mP_Genere = new MP_Genere();
            mP_Genere.GenereID = genereID;
            mP_Genere.GenereType = genereType;
            return mP_Genere;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenereID
        {
            get
            {
                return _GenereID;
            }
            set
            {
                if (_GenereID != value)
                {
                    OnGenereIDChanging(value);
                    ReportPropertyChanging("GenereID");
                    _GenereID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GenereID");
                    OnGenereIDChanged();
                }
            }
        }
        private global::System.Int32 _GenereID;
        partial void OnGenereIDChanging(global::System.Int32 value);
        partial void OnGenereIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenereType
        {
            get
            {
                return _GenereType;
            }
            set
            {
                OnGenereTypeChanging(value);
                ReportPropertyChanging("GenereType");
                _GenereType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GenereType");
                OnGenereTypeChanged();
            }
        }
        private global::System.String _GenereType;
        partial void OnGenereTypeChanging(global::System.String value);
        partial void OnGenereTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Movies_genereid", "MP_Movies")]
        public EntityCollection<MP_Movies> MP_Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_Movies>("MoviePlexModel.ck_fk_mp_Movies_genereid", "MP_Movies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_Movies>("MoviePlexModel.ck_fk_mp_Movies_genereid", "MP_Movies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_Language object.
        /// </summary>
        /// <param name="languageCode">Initial value of the LanguageCode property.</param>
        /// <param name="language">Initial value of the Language property.</param>
        public static MP_Language CreateMP_Language(global::System.String languageCode, global::System.String language)
        {
            MP_Language mP_Language = new MP_Language();
            mP_Language.LanguageCode = languageCode;
            mP_Language.Language = language;
            return mP_Language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageCode
        {
            get
            {
                return _LanguageCode;
            }
            set
            {
                if (_LanguageCode != value)
                {
                    OnLanguageCodeChanging(value);
                    ReportPropertyChanging("LanguageCode");
                    _LanguageCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LanguageCode");
                    OnLanguageCodeChanged();
                }
            }
        }
        private global::System.String _LanguageCode;
        partial void OnLanguageCodeChanging(global::System.String value);
        partial void OnLanguageCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Movies_LanguageCode", "MP_Movies")]
        public EntityCollection<MP_Movies> MP_Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_Movies>("MoviePlexModel.ck_fk_mp_Movies_LanguageCode", "MP_Movies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_Movies>("MoviePlexModel.ck_fk_mp_Movies_LanguageCode", "MP_Movies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_MovieCertifications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_MovieCertifications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_MovieCertifications object.
        /// </summary>
        /// <param name="certificationId">Initial value of the CertificationId property.</param>
        public static MP_MovieCertifications CreateMP_MovieCertifications(global::System.Int32 certificationId)
        {
            MP_MovieCertifications mP_MovieCertifications = new MP_MovieCertifications();
            mP_MovieCertifications.CertificationId = certificationId;
            return mP_MovieCertifications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CertificationId
        {
            get
            {
                return _CertificationId;
            }
            set
            {
                if (_CertificationId != value)
                {
                    OnCertificationIdChanging(value);
                    ReportPropertyChanging("CertificationId");
                    _CertificationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CertificationId");
                    OnCertificationIdChanged();
                }
            }
        }
        private global::System.Int32 _CertificationId;
        partial void OnCertificationIdChanging(global::System.Int32 value);
        partial void OnCertificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CertificationType
        {
            get
            {
                return _CertificationType;
            }
            set
            {
                OnCertificationTypeChanging(value);
                ReportPropertyChanging("CertificationType");
                _CertificationType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CertificationType");
                OnCertificationTypeChanged();
            }
        }
        private global::System.String _CertificationType;
        partial void OnCertificationTypeChanging(global::System.String value);
        partial void OnCertificationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CertificationName
        {
            get
            {
                return _CertificationName;
            }
            set
            {
                OnCertificationNameChanging(value);
                ReportPropertyChanging("CertificationName");
                _CertificationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CertificationName");
                OnCertificationNameChanged();
            }
        }
        private global::System.String _CertificationName;
        partial void OnCertificationNameChanging(global::System.String value);
        partial void OnCertificationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CertificationDescription
        {
            get
            {
                return _CertificationDescription;
            }
            set
            {
                OnCertificationDescriptionChanging(value);
                ReportPropertyChanging("CertificationDescription");
                _CertificationDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CertificationDescription");
                OnCertificationDescriptionChanged();
            }
        }
        private global::System.String _CertificationDescription;
        partial void OnCertificationDescriptionChanging(global::System.String value);
        partial void OnCertificationDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Movies_certificationid", "MP_Movies")]
        public EntityCollection<MP_Movies> MP_Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_Movies>("MoviePlexModel.ck_fk_mp_Movies_certificationid", "MP_Movies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_Movies>("MoviePlexModel.ck_fk_mp_Movies_certificationid", "MP_Movies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_Movies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_Movies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_Movies object.
        /// </summary>
        /// <param name="movieId">Initial value of the MovieId property.</param>
        /// <param name="movieName">Initial value of the MovieName property.</param>
        /// <param name="releaseDate">Initial value of the ReleaseDate property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MP_Movies CreateMP_Movies(global::System.Int32 movieId, global::System.String movieName, global::System.DateTime releaseDate, global::System.String description)
        {
            MP_Movies mP_Movies = new MP_Movies();
            mP_Movies.MovieId = movieId;
            mP_Movies.MovieName = movieName;
            mP_Movies.ReleaseDate = releaseDate;
            mP_Movies.Description = description;
            return mP_Movies;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieId
        {
            get
            {
                return _MovieId;
            }
            set
            {
                if (_MovieId != value)
                {
                    OnMovieIdChanging(value);
                    ReportPropertyChanging("MovieId");
                    _MovieId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MovieId");
                    OnMovieIdChanged();
                }
            }
        }
        private global::System.Int32 _MovieId;
        partial void OnMovieIdChanging(global::System.Int32 value);
        partial void OnMovieIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieName
        {
            get
            {
                return _MovieName;
            }
            set
            {
                OnMovieNameChanging(value);
                ReportPropertyChanging("MovieName");
                _MovieName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MovieName");
                OnMovieNameChanged();
            }
        }
        private global::System.String _MovieName;
        partial void OnMovieNameChanging(global::System.String value);
        partial void OnMovieNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LanguageCode
        {
            get
            {
                return _LanguageCode;
            }
            set
            {
                OnLanguageCodeChanging(value);
                ReportPropertyChanging("LanguageCode");
                _LanguageCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LanguageCode");
                OnLanguageCodeChanged();
            }
        }
        private global::System.String _LanguageCode;
        partial void OnLanguageCodeChanging(global::System.String value);
        partial void OnLanguageCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CertificationId
        {
            get
            {
                return _CertificationId;
            }
            set
            {
                OnCertificationIdChanging(value);
                ReportPropertyChanging("CertificationId");
                _CertificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CertificationId");
                OnCertificationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CertificationId;
        partial void OnCertificationIdChanging(Nullable<global::System.Int32> value);
        partial void OnCertificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GenereId
        {
            get
            {
                return _GenereId;
            }
            set
            {
                OnGenereIdChanging(value);
                ReportPropertyChanging("GenereId");
                _GenereId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenereId");
                OnGenereIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GenereId;
        partial void OnGenereIdChanging(Nullable<global::System.Int32> value);
        partial void OnGenereIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReleaseDate
        {
            get
            {
                return _ReleaseDate;
            }
            set
            {
                OnReleaseDateChanging(value);
                ReportPropertyChanging("ReleaseDate");
                _ReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseDate");
                OnReleaseDateChanged();
            }
        }
        private global::System.DateTime _ReleaseDate;
        partial void OnReleaseDateChanging(global::System.DateTime value);
        partial void OnReleaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Decimal> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Decimal> value);
        partial void OnDurationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Movies_genereid", "MP_Genere")]
        public MP_Genere MP_Genere
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Genere>("MoviePlexModel.ck_fk_mp_Movies_genereid", "MP_Genere").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Genere>("MoviePlexModel.ck_fk_mp_Movies_genereid", "MP_Genere").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_Genere> MP_GenereReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Genere>("MoviePlexModel.ck_fk_mp_Movies_genereid", "MP_Genere");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_Genere>("MoviePlexModel.ck_fk_mp_Movies_genereid", "MP_Genere", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Movies_LanguageCode", "MP_Language")]
        public MP_Language MP_Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Language>("MoviePlexModel.ck_fk_mp_Movies_LanguageCode", "MP_Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Language>("MoviePlexModel.ck_fk_mp_Movies_LanguageCode", "MP_Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_Language> MP_LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Language>("MoviePlexModel.ck_fk_mp_Movies_LanguageCode", "MP_Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_Language>("MoviePlexModel.ck_fk_mp_Movies_LanguageCode", "MP_Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Movies_certificationid", "MP_MovieCertifications")]
        public MP_MovieCertifications MP_MovieCertifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_MovieCertifications>("MoviePlexModel.ck_fk_mp_Movies_certificationid", "MP_MovieCertifications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_MovieCertifications>("MoviePlexModel.ck_fk_mp_Movies_certificationid", "MP_MovieCertifications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_MovieCertifications> MP_MovieCertificationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_MovieCertifications>("MoviePlexModel.ck_fk_mp_Movies_certificationid", "MP_MovieCertifications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_MovieCertifications>("MoviePlexModel.ck_fk_mp_Movies_certificationid", "MP_MovieCertifications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Show_movie_id", "MP_Shows")]
        public EntityCollection<MP_Shows> MP_Shows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_Shows>("MoviePlexModel.ck_fk_mp_Show_movie_id", "MP_Shows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_Shows>("MoviePlexModel.ck_fk_mp_Show_movie_id", "MP_Shows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_Screens")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_Screens : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_Screens object.
        /// </summary>
        /// <param name="screenId">Initial value of the ScreenId property.</param>
        /// <param name="theaterId">Initial value of the TheaterId property.</param>
        /// <param name="screenName">Initial value of the ScreenName property.</param>
        public static MP_Screens CreateMP_Screens(global::System.Int32 screenId, global::System.Int32 theaterId, global::System.String screenName)
        {
            MP_Screens mP_Screens = new MP_Screens();
            mP_Screens.ScreenId = screenId;
            mP_Screens.TheaterId = theaterId;
            mP_Screens.ScreenName = screenName;
            return mP_Screens;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreenId
        {
            get
            {
                return _ScreenId;
            }
            set
            {
                if (_ScreenId != value)
                {
                    OnScreenIdChanging(value);
                    ReportPropertyChanging("ScreenId");
                    _ScreenId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScreenId");
                    OnScreenIdChanged();
                }
            }
        }
        private global::System.Int32 _ScreenId;
        partial void OnScreenIdChanging(global::System.Int32 value);
        partial void OnScreenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                OnTheaterIdChanging(value);
                ReportPropertyChanging("TheaterId");
                _TheaterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheaterId");
                OnTheaterIdChanged();
            }
        }
        private global::System.Int32 _TheaterId;
        partial void OnTheaterIdChanging(global::System.Int32 value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScreenName
        {
            get
            {
                return _ScreenName;
            }
            set
            {
                OnScreenNameChanging(value);
                ReportPropertyChanging("ScreenName");
                _ScreenName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScreenName");
                OnScreenNameChanged();
            }
        }
        private global::System.String _ScreenName;
        partial void OnScreenNameChanging(global::System.String value);
        partial void OnScreenNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _Capacity;
        partial void OnCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Shows_screen_id", "MP_Shows")]
        public EntityCollection<MP_Shows> MP_Shows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_Shows>("MoviePlexModel.ck_fk_mp_Shows_screen_id", "MP_Shows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_Shows>("MoviePlexModel.ck_fk_mp_Shows_screen_id", "MP_Shows", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_screentseats_Screenid", "MP_ScreenSeats")]
        public EntityCollection<MP_ScreenSeats> MP_ScreenSeats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_ScreenSeats>("MoviePlexModel.ck_fk_screentseats_Screenid", "MP_ScreenSeats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_ScreenSeats>("MoviePlexModel.ck_fk_screentseats_Screenid", "MP_ScreenSeats", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_ScreenSeats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_ScreenSeats : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_ScreenSeats object.
        /// </summary>
        /// <param name="screenSeatId">Initial value of the ScreenSeatId property.</param>
        /// <param name="zoneId">Initial value of the ZoneId property.</param>
        /// <param name="screenId">Initial value of the ScreenId property.</param>
        /// <param name="seatName">Initial value of the SeatName property.</param>
        public static MP_ScreenSeats CreateMP_ScreenSeats(global::System.Int32 screenSeatId, global::System.Int32 zoneId, global::System.Int32 screenId, global::System.String seatName)
        {
            MP_ScreenSeats mP_ScreenSeats = new MP_ScreenSeats();
            mP_ScreenSeats.ScreenSeatId = screenSeatId;
            mP_ScreenSeats.ZoneId = zoneId;
            mP_ScreenSeats.ScreenId = screenId;
            mP_ScreenSeats.SeatName = seatName;
            return mP_ScreenSeats;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreenSeatId
        {
            get
            {
                return _ScreenSeatId;
            }
            set
            {
                if (_ScreenSeatId != value)
                {
                    OnScreenSeatIdChanging(value);
                    ReportPropertyChanging("ScreenSeatId");
                    _ScreenSeatId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScreenSeatId");
                    OnScreenSeatIdChanged();
                }
            }
        }
        private global::System.Int32 _ScreenSeatId;
        partial void OnScreenSeatIdChanging(global::System.Int32 value);
        partial void OnScreenSeatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneId
        {
            get
            {
                return _ZoneId;
            }
            set
            {
                OnZoneIdChanging(value);
                ReportPropertyChanging("ZoneId");
                _ZoneId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneId");
                OnZoneIdChanged();
            }
        }
        private global::System.Int32 _ZoneId;
        partial void OnZoneIdChanging(global::System.Int32 value);
        partial void OnZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreenId
        {
            get
            {
                return _ScreenId;
            }
            set
            {
                OnScreenIdChanging(value);
                ReportPropertyChanging("ScreenId");
                _ScreenId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScreenId");
                OnScreenIdChanged();
            }
        }
        private global::System.Int32 _ScreenId;
        partial void OnScreenIdChanging(global::System.Int32 value);
        partial void OnScreenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatName
        {
            get
            {
                return _SeatName;
            }
            set
            {
                OnSeatNameChanging(value);
                ReportPropertyChanging("SeatName");
                _SeatName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeatName");
                OnSeatNameChanged();
            }
        }
        private global::System.String _SeatName;
        partial void OnSeatNameChanging(global::System.String value);
        partial void OnSeatNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_screentseats_Screenid", "MP_Screens")]
        public MP_Screens MP_Screens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Screens>("MoviePlexModel.ck_fk_screentseats_Screenid", "MP_Screens").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Screens>("MoviePlexModel.ck_fk_screentseats_Screenid", "MP_Screens").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_Screens> MP_ScreensReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Screens>("MoviePlexModel.ck_fk_screentseats_Screenid", "MP_Screens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_Screens>("MoviePlexModel.ck_fk_screentseats_Screenid", "MP_Screens", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_ScreenSeats_ZoneId", "MP_ScreenZones")]
        public MP_ScreenZones MP_ScreenZones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_ScreenZones>("MoviePlexModel.ck_fk_ScreenSeats_ZoneId", "MP_ScreenZones").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_ScreenZones>("MoviePlexModel.ck_fk_ScreenSeats_ZoneId", "MP_ScreenZones").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_ScreenZones> MP_ScreenZonesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_ScreenZones>("MoviePlexModel.ck_fk_ScreenSeats_ZoneId", "MP_ScreenZones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_ScreenZones>("MoviePlexModel.ck_fk_ScreenSeats_ZoneId", "MP_ScreenZones", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "MP_ReservedSeats", "MP_ShowReservations")]
        public EntityCollection<MP_ShowReservations> MP_ShowReservations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_ShowReservations>("MoviePlexModel.MP_ReservedSeats", "MP_ShowReservations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_ShowReservations>("MoviePlexModel.MP_ReservedSeats", "MP_ShowReservations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_ScreenZones")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_ScreenZones : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_ScreenZones object.
        /// </summary>
        /// <param name="zoneId">Initial value of the ZoneId property.</param>
        public static MP_ScreenZones CreateMP_ScreenZones(global::System.Int32 zoneId)
        {
            MP_ScreenZones mP_ScreenZones = new MP_ScreenZones();
            mP_ScreenZones.ZoneId = zoneId;
            return mP_ScreenZones;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneId
        {
            get
            {
                return _ZoneId;
            }
            set
            {
                if (_ZoneId != value)
                {
                    OnZoneIdChanging(value);
                    ReportPropertyChanging("ZoneId");
                    _ZoneId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneId");
                    OnZoneIdChanged();
                }
            }
        }
        private global::System.Int32 _ZoneId;
        partial void OnZoneIdChanging(global::System.Int32 value);
        partial void OnZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZoneName
        {
            get
            {
                return _ZoneName;
            }
            set
            {
                OnZoneNameChanging(value);
                ReportPropertyChanging("ZoneName");
                _ZoneName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZoneName");
                OnZoneNameChanged();
            }
        }
        private global::System.String _ZoneName;
        partial void OnZoneNameChanging(global::System.String value);
        partial void OnZoneNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_ScreenSeats_ZoneId", "MP_ScreenSeats")]
        public EntityCollection<MP_ScreenSeats> MP_ScreenSeats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_ScreenSeats>("MoviePlexModel.ck_fk_ScreenSeats_ZoneId", "MP_ScreenSeats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_ScreenSeats>("MoviePlexModel.ck_fk_ScreenSeats_ZoneId", "MP_ScreenSeats", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Zone_zoneid", "MP_ShowCost")]
        public EntityCollection<MP_ShowCost> MP_ShowCost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_ShowCost>("MoviePlexModel.ck_fk_mp_Zone_zoneid", "MP_ShowCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_ShowCost>("MoviePlexModel.ck_fk_mp_Zone_zoneid", "MP_ShowCost", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_ShowCost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_ShowCost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_ShowCost object.
        /// </summary>
        /// <param name="showId">Initial value of the ShowId property.</param>
        /// <param name="zoneId">Initial value of the ZoneId property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static MP_ShowCost CreateMP_ShowCost(global::System.Int32 showId, global::System.Int32 zoneId, global::System.Decimal cost)
        {
            MP_ShowCost mP_ShowCost = new MP_ShowCost();
            mP_ShowCost.ShowId = showId;
            mP_ShowCost.ZoneId = zoneId;
            mP_ShowCost.Cost = cost;
            return mP_ShowCost;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShowId
        {
            get
            {
                return _ShowId;
            }
            set
            {
                if (_ShowId != value)
                {
                    OnShowIdChanging(value);
                    ReportPropertyChanging("ShowId");
                    _ShowId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShowId");
                    OnShowIdChanged();
                }
            }
        }
        private global::System.Int32 _ShowId;
        partial void OnShowIdChanging(global::System.Int32 value);
        partial void OnShowIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneId
        {
            get
            {
                return _ZoneId;
            }
            set
            {
                if (_ZoneId != value)
                {
                    OnZoneIdChanging(value);
                    ReportPropertyChanging("ZoneId");
                    _ZoneId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneId");
                    OnZoneIdChanged();
                }
            }
        }
        private global::System.Int32 _ZoneId;
        partial void OnZoneIdChanging(global::System.Int32 value);
        partial void OnZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                if (_Cost != value)
                {
                    OnCostChanging(value);
                    ReportPropertyChanging("Cost");
                    _Cost = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Cost");
                    OnCostChanged();
                }
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Zone_zoneid", "MP_ScreenZones")]
        public MP_ScreenZones MP_ScreenZones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_ScreenZones>("MoviePlexModel.ck_fk_mp_Zone_zoneid", "MP_ScreenZones").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_ScreenZones>("MoviePlexModel.ck_fk_mp_Zone_zoneid", "MP_ScreenZones").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_ScreenZones> MP_ScreenZonesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_ScreenZones>("MoviePlexModel.ck_fk_mp_Zone_zoneid", "MP_ScreenZones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_ScreenZones>("MoviePlexModel.ck_fk_mp_Zone_zoneid", "MP_ScreenZones", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_showcost_showid", "MP_Shows")]
        public MP_Shows MP_Shows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Shows>("MoviePlexModel.ck_fk_mp_showcost_showid", "MP_Shows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Shows>("MoviePlexModel.ck_fk_mp_showcost_showid", "MP_Shows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_Shows> MP_ShowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Shows>("MoviePlexModel.ck_fk_mp_showcost_showid", "MP_Shows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_Shows>("MoviePlexModel.ck_fk_mp_showcost_showid", "MP_Shows", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_ShowReservations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_ShowReservations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_ShowReservations object.
        /// </summary>
        /// <param name="reservationId">Initial value of the ReservationId property.</param>
        /// <param name="showId">Initial value of the ShowId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="reservationDate">Initial value of the ReservationDate property.</param>
        /// <param name="referenceNumber">Initial value of the ReferenceNumber property.</param>
        public static MP_ShowReservations CreateMP_ShowReservations(global::System.Int32 reservationId, global::System.Int32 showId, global::System.String userId, global::System.Decimal totalAmount, global::System.DateTime reservationDate, global::System.String referenceNumber)
        {
            MP_ShowReservations mP_ShowReservations = new MP_ShowReservations();
            mP_ShowReservations.ReservationId = reservationId;
            mP_ShowReservations.ShowId = showId;
            mP_ShowReservations.UserId = userId;
            mP_ShowReservations.TotalAmount = totalAmount;
            mP_ShowReservations.ReservationDate = reservationDate;
            mP_ShowReservations.ReferenceNumber = referenceNumber;
            return mP_ShowReservations;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReservationId
        {
            get
            {
                return _ReservationId;
            }
            set
            {
                if (_ReservationId != value)
                {
                    OnReservationIdChanging(value);
                    ReportPropertyChanging("ReservationId");
                    _ReservationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReservationId");
                    OnReservationIdChanged();
                }
            }
        }
        private global::System.Int32 _ReservationId;
        partial void OnReservationIdChanging(global::System.Int32 value);
        partial void OnReservationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShowId
        {
            get
            {
                return _ShowId;
            }
            set
            {
                OnShowIdChanging(value);
                ReportPropertyChanging("ShowId");
                _ShowId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowId");
                OnShowIdChanged();
            }
        }
        private global::System.Int32 _ShowId;
        partial void OnShowIdChanging(global::System.Int32 value);
        partial void OnShowIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalSeats
        {
            get
            {
                return _TotalSeats;
            }
            set
            {
                OnTotalSeatsChanging(value);
                ReportPropertyChanging("TotalSeats");
                _TotalSeats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalSeats");
                OnTotalSeatsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalSeats;
        partial void OnTotalSeatsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalSeatsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Decimal _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Decimal value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReservationDate
        {
            get
            {
                return _ReservationDate;
            }
            set
            {
                OnReservationDateChanging(value);
                ReportPropertyChanging("ReservationDate");
                _ReservationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReservationDate");
                OnReservationDateChanged();
            }
        }
        private global::System.DateTime _ReservationDate;
        partial void OnReservationDateChanging(global::System.DateTime value);
        partial void OnReservationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceNumber
        {
            get
            {
                return _ReferenceNumber;
            }
            set
            {
                OnReferenceNumberChanging(value);
                ReportPropertyChanging("ReferenceNumber");
                _ReferenceNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceNumber");
                OnReferenceNumberChanged();
            }
        }
        private global::System.String _ReferenceNumber;
        partial void OnReferenceNumberChanging(global::System.String value);
        partial void OnReferenceNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_ShowReservation_showid", "MP_Shows")]
        public MP_Shows MP_Shows
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Shows>("MoviePlexModel.FK_ck_fk_ShowReservation_showid", "MP_Shows").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Shows>("MoviePlexModel.FK_ck_fk_ShowReservation_showid", "MP_Shows").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_Shows> MP_ShowsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Shows>("MoviePlexModel.FK_ck_fk_ShowReservation_showid", "MP_Shows");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_Shows>("MoviePlexModel.FK_ck_fk_ShowReservation_showid", "MP_Shows", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "MP_ReservedSeats", "MP_ScreenSeats")]
        public EntityCollection<MP_ScreenSeats> MP_ScreenSeats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_ScreenSeats>("MoviePlexModel.MP_ReservedSeats", "MP_ScreenSeats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_ScreenSeats>("MoviePlexModel.MP_ReservedSeats", "MP_ScreenSeats", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_Shows")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_Shows : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_Shows object.
        /// </summary>
        /// <param name="showId">Initial value of the ShowId property.</param>
        /// <param name="screenId">Initial value of the ScreenId property.</param>
        /// <param name="movieId">Initial value of the MovieId property.</param>
        /// <param name="minimumAgeLimit">Initial value of the MinimumAgeLimit property.</param>
        /// <param name="showDate">Initial value of the ShowDate property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static MP_Shows CreateMP_Shows(global::System.Int32 showId, global::System.Int32 screenId, global::System.Int32 movieId, global::System.Int32 minimumAgeLimit, global::System.DateTime showDate, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Boolean isActive)
        {
            MP_Shows mP_Shows = new MP_Shows();
            mP_Shows.ShowId = showId;
            mP_Shows.ScreenId = screenId;
            mP_Shows.MovieId = movieId;
            mP_Shows.MinimumAgeLimit = minimumAgeLimit;
            mP_Shows.ShowDate = showDate;
            mP_Shows.StartTime = startTime;
            mP_Shows.EndTime = endTime;
            mP_Shows.IsActive = isActive;
            return mP_Shows;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShowId
        {
            get
            {
                return _ShowId;
            }
            set
            {
                if (_ShowId != value)
                {
                    OnShowIdChanging(value);
                    ReportPropertyChanging("ShowId");
                    _ShowId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShowId");
                    OnShowIdChanged();
                }
            }
        }
        private global::System.Int32 _ShowId;
        partial void OnShowIdChanging(global::System.Int32 value);
        partial void OnShowIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreenId
        {
            get
            {
                return _ScreenId;
            }
            set
            {
                OnScreenIdChanging(value);
                ReportPropertyChanging("ScreenId");
                _ScreenId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScreenId");
                OnScreenIdChanged();
            }
        }
        private global::System.Int32 _ScreenId;
        partial void OnScreenIdChanging(global::System.Int32 value);
        partial void OnScreenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieId
        {
            get
            {
                return _MovieId;
            }
            set
            {
                OnMovieIdChanging(value);
                ReportPropertyChanging("MovieId");
                _MovieId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieId");
                OnMovieIdChanged();
            }
        }
        private global::System.Int32 _MovieId;
        partial void OnMovieIdChanging(global::System.Int32 value);
        partial void OnMovieIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumAgeLimit
        {
            get
            {
                return _MinimumAgeLimit;
            }
            set
            {
                OnMinimumAgeLimitChanging(value);
                ReportPropertyChanging("MinimumAgeLimit");
                _MinimumAgeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumAgeLimit");
                OnMinimumAgeLimitChanged();
            }
        }
        private global::System.Int32 _MinimumAgeLimit;
        partial void OnMinimumAgeLimitChanging(global::System.Int32 value);
        partial void OnMinimumAgeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ShowDate
        {
            get
            {
                return _ShowDate;
            }
            set
            {
                OnShowDateChanging(value);
                ReportPropertyChanging("ShowDate");
                _ShowDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowDate");
                OnShowDateChanged();
            }
        }
        private global::System.DateTime _ShowDate;
        partial void OnShowDateChanging(global::System.DateTime value);
        partial void OnShowDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Show_movie_id", "MP_Movies")]
        public MP_Movies MP_Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Movies>("MoviePlexModel.ck_fk_mp_Show_movie_id", "MP_Movies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Movies>("MoviePlexModel.ck_fk_mp_Show_movie_id", "MP_Movies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_Movies> MP_MoviesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Movies>("MoviePlexModel.ck_fk_mp_Show_movie_id", "MP_Movies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_Movies>("MoviePlexModel.ck_fk_mp_Show_movie_id", "MP_Movies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_Shows_screen_id", "MP_Screens")]
        public MP_Screens MP_Screens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Screens>("MoviePlexModel.ck_fk_mp_Shows_screen_id", "MP_Screens").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Screens>("MoviePlexModel.ck_fk_mp_Shows_screen_id", "MP_Screens").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_Screens> MP_ScreensReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Screens>("MoviePlexModel.ck_fk_mp_Shows_screen_id", "MP_Screens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_Screens>("MoviePlexModel.ck_fk_mp_Shows_screen_id", "MP_Screens", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "ck_fk_mp_showcost_showid", "MP_ShowCost")]
        public EntityCollection<MP_ShowCost> MP_ShowCost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_ShowCost>("MoviePlexModel.ck_fk_mp_showcost_showid", "MP_ShowCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_ShowCost>("MoviePlexModel.ck_fk_mp_showcost_showid", "MP_ShowCost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_ShowReservation_showid", "MP_ShowReservations")]
        public EntityCollection<MP_ShowReservations> MP_ShowReservations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_ShowReservations>("MoviePlexModel.FK_ck_fk_ShowReservation_showid", "MP_ShowReservations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_ShowReservations>("MoviePlexModel.FK_ck_fk_ShowReservation_showid", "MP_ShowReservations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_State object.
        /// </summary>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="stateName">Initial value of the StateName property.</param>
        public static MP_State CreateMP_State(global::System.Int32 stateId, global::System.Int32 countryId, global::System.String stateName)
        {
            MP_State mP_State = new MP_State();
            mP_State.StateId = stateId;
            mP_State.CountryId = countryId;
            mP_State.StateName = stateName;
            return mP_State;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                if (_StateId != value)
                {
                    OnStateIdChanging(value);
                    ReportPropertyChanging("StateId");
                    _StateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateId");
                    OnStateIdChanged();
                }
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_city_stateid", "MP_City")]
        public EntityCollection<MP_City> MP_City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_City>("MoviePlexModel.FK_ck_fk_mp_city_stateid", "MP_City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_City>("MoviePlexModel.FK_ck_fk_mp_city_stateid", "MP_City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_state_countryid", "MP_Country")]
        public MP_Country MP_Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Country>("MoviePlexModel.FK_ck_fk_mp_state_countryid", "MP_Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Country>("MoviePlexModel.FK_ck_fk_mp_state_countryid", "MP_Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_Country> MP_CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_Country>("MoviePlexModel.FK_ck_fk_mp_state_countryid", "MP_Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_Country>("MoviePlexModel.FK_ck_fk_mp_state_countryid", "MP_Country", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_Theaters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_Theaters : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_Theaters object.
        /// </summary>
        /// <param name="theaterId">Initial value of the TheaterId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="numberOfScreens">Initial value of the NumberOfScreens property.</param>
        /// <param name="dBCreationDate">Initial value of the DBCreationDate property.</param>
        public static MP_Theaters CreateMP_Theaters(global::System.Int32 theaterId, global::System.String name, global::System.Int32 numberOfScreens, global::System.DateTime dBCreationDate)
        {
            MP_Theaters mP_Theaters = new MP_Theaters();
            mP_Theaters.TheaterId = theaterId;
            mP_Theaters.Name = name;
            mP_Theaters.NumberOfScreens = numberOfScreens;
            mP_Theaters.DBCreationDate = dBCreationDate;
            return mP_Theaters;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                if (_TheaterId != value)
                {
                    OnTheaterIdChanging(value);
                    ReportPropertyChanging("TheaterId");
                    _TheaterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TheaterId");
                    OnTheaterIdChanged();
                }
            }
        }
        private global::System.Int32 _TheaterId;
        partial void OnTheaterIdChanging(global::System.Int32 value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfScreens
        {
            get
            {
                return _NumberOfScreens;
            }
            set
            {
                OnNumberOfScreensChanging(value);
                ReportPropertyChanging("NumberOfScreens");
                _NumberOfScreens = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfScreens");
                OnNumberOfScreensChanged();
            }
        }
        private global::System.Int32 _NumberOfScreens;
        partial void OnNumberOfScreensChanging(global::System.Int32 value);
        partial void OnNumberOfScreensChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TheaterBrandID
        {
            get
            {
                return _TheaterBrandID;
            }
            set
            {
                OnTheaterBrandIDChanging(value);
                ReportPropertyChanging("TheaterBrandID");
                _TheaterBrandID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TheaterBrandID");
                OnTheaterBrandIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TheaterBrandID;
        partial void OnTheaterBrandIDChanging(Nullable<global::System.Int32> value);
        partial void OnTheaterBrandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DBCreationDate
        {
            get
            {
                return _DBCreationDate;
            }
            set
            {
                OnDBCreationDateChanging(value);
                ReportPropertyChanging("DBCreationDate");
                _DBCreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DBCreationDate");
                OnDBCreationDateChanged();
            }
        }
        private global::System.DateTime _DBCreationDate;
        partial void OnDBCreationDateChanging(global::System.DateTime value);
        partial void OnDBCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreationUserId
        {
            get
            {
                return _CreationUserId;
            }
            set
            {
                OnCreationUserIdChanging(value);
                ReportPropertyChanging("CreationUserId");
                _CreationUserId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreationUserId");
                OnCreationUserIdChanged();
            }
        }
        private global::System.String _CreationUserId;
        partial void OnCreationUserIdChanging(global::System.String value);
        partial void OnCreationUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_TheatersBrand")]
        public MP_TheatersBrand MP_TheatersBrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_TheatersBrand>("MoviePlexModel.FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_TheatersBrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_TheatersBrand>("MoviePlexModel.FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_TheatersBrand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_TheatersBrand> MP_TheatersBrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_TheatersBrand>("MoviePlexModel.FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_TheatersBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_TheatersBrand>("MoviePlexModel.FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_TheatersBrand", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_TheatersBrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_TheatersBrand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_TheatersBrand object.
        /// </summary>
        /// <param name="theaterBrandId">Initial value of the TheaterBrandId property.</param>
        /// <param name="brandName">Initial value of the BrandName property.</param>
        public static MP_TheatersBrand CreateMP_TheatersBrand(global::System.Int32 theaterBrandId, global::System.String brandName)
        {
            MP_TheatersBrand mP_TheatersBrand = new MP_TheatersBrand();
            mP_TheatersBrand.TheaterBrandId = theaterBrandId;
            mP_TheatersBrand.BrandName = brandName;
            return mP_TheatersBrand;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TheaterBrandId
        {
            get
            {
                return _TheaterBrandId;
            }
            set
            {
                if (_TheaterBrandId != value)
                {
                    OnTheaterBrandIdChanging(value);
                    ReportPropertyChanging("TheaterBrandId");
                    _TheaterBrandId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TheaterBrandId");
                    OnTheaterBrandIdChanged();
                }
            }
        }
        private global::System.Int32 _TheaterBrandId;
        partial void OnTheaterBrandIdChanging(global::System.Int32 value);
        partial void OnTheaterBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_Theaters")]
        public EntityCollection<MP_Theaters> MP_Theaters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MP_Theaters>("MoviePlexModel.FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_Theaters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MP_Theaters>("MoviePlexModel.FK_ck_fk_mp_Theaters_TheaterBrandId", "MP_Theaters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_UserInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_UserInfo object.
        /// </summary>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="emailId">Initial value of the EmailId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isValidEmail">Initial value of the IsValidEmail property.</param>
        public static MP_UserInfo CreateMP_UserInfo(global::System.Guid uid, global::System.String emailId, global::System.String password, global::System.Boolean isValidEmail)
        {
            MP_UserInfo mP_UserInfo = new MP_UserInfo();
            mP_UserInfo.Uid = uid;
            mP_UserInfo.EmailId = emailId;
            mP_UserInfo.Password = password;
            mP_UserInfo.IsValidEmail = isValidEmail;
            return mP_UserInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                if (_Uid != value)
                {
                    OnUidChanging(value);
                    ReportPropertyChanging("Uid");
                    _Uid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Uid");
                    OnUidChanged();
                }
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                OnEmailIdChanging(value);
                ReportPropertyChanging("EmailId");
                _EmailId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailId");
                OnEmailIdChanged();
            }
        }
        private global::System.String _EmailId;
        partial void OnEmailIdChanging(global::System.String value);
        partial void OnEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsValidEmail
        {
            get
            {
                return _IsValidEmail;
            }
            set
            {
                OnIsValidEmailChanging(value);
                ReportPropertyChanging("IsValidEmail");
                _IsValidEmail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValidEmail");
                OnIsValidEmailChanged();
            }
        }
        private global::System.Boolean _IsValidEmail;
        partial void OnIsValidEmailChanging(global::System.Boolean value);
        partial void OnIsValidEmailChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="MP_ZipCodes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MP_ZipCodes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MP_ZipCodes object.
        /// </summary>
        /// <param name="zipId">Initial value of the ZipId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="zipCodes">Initial value of the ZipCodes property.</param>
        public static MP_ZipCodes CreateMP_ZipCodes(global::System.Int32 zipId, global::System.Int32 cityId, global::System.String zipCodes)
        {
            MP_ZipCodes mP_ZipCodes = new MP_ZipCodes();
            mP_ZipCodes.ZipId = zipId;
            mP_ZipCodes.CityId = cityId;
            mP_ZipCodes.ZipCodes = zipCodes;
            return mP_ZipCodes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipId
        {
            get
            {
                return _ZipId;
            }
            set
            {
                if (_ZipId != value)
                {
                    OnZipIdChanging(value);
                    ReportPropertyChanging("ZipId");
                    _ZipId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZipId");
                    OnZipIdChanged();
                }
            }
        }
        private global::System.Int32 _ZipId;
        partial void OnZipIdChanging(global::System.Int32 value);
        partial void OnZipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCodes
        {
            get
            {
                return _ZipCodes;
            }
            set
            {
                OnZipCodesChanging(value);
                ReportPropertyChanging("ZipCodes");
                _ZipCodes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ZipCodes");
                OnZipCodesChanged();
            }
        }
        private global::System.String _ZipCodes;
        partial void OnZipCodesChanging(global::System.String value);
        partial void OnZipCodesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MoviePlexModel", "FK_ck_fk_mp_zip_cityid", "MP_City")]
        public MP_City MP_City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_City>("MoviePlexModel.FK_ck_fk_mp_zip_cityid", "MP_City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_City>("MoviePlexModel.FK_ck_fk_mp_zip_cityid", "MP_City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MP_City> MP_CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MP_City>("MoviePlexModel.FK_ck_fk_mp_zip_cityid", "MP_City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MP_City>("MoviePlexModel.FK_ck_fk_mp_zip_cityid", "MP_City", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MoviePlexModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }

    #endregion
    
}
